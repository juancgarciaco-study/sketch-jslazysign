/*
 jQuery scrollintoview() plugin and :scrollable selector filter 

 Version 1.8 (14 Jul 2011) 
 Requires jQuery 1.4 or newer 

 Copyright (c) 2011 Robert Koritnik 
 Licensed under the terms of the MIT license 
 http://www.opensource.org/licenses/mit-license.php 
*/
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.findInternal = function(b, a, c) {
    b instanceof String && (b = String(b));
    for (var g = b.length, e = 0; e < g; e++) {
        var h = b[e];
        if (a.call(c, h, e, b)) return {
            i: e,
            v: h
        }
    }
    return {
        i: -1,
        v: void 0
    }
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(b, a, c) {
    b != Array.prototype && b != Object.prototype && (b[a] = c.value)
};
$jscomp.getGlobal = function(b) {
    return "undefined" != typeof window && window === b ? b : "undefined" != typeof global && null != global ? global : b
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function(b, a, c, g) {
    if (a) {
        c = $jscomp.global;
        b = b.split(".");
        for (g = 0; g < b.length - 1; g++) {
            var e = b[g];
            e in c || (c[e] = {});
            c = c[e]
        }
        b = b[b.length - 1];
        g = c[b];
        a = a(g);
        a != g && null != a && $jscomp.defineProperty(c, b, {
            configurable: !0,
            writable: !0,
            value: a
        })
    }
};
$jscomp.polyfill("Array.prototype.find", function(b) {
    return b ? b : function(a, b) {
        return $jscomp.findInternal(this, a, b).v
    }
}, "es6", "es3");
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
    $jscomp.initSymbol = function() {};
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
};
$jscomp.Symbol = function() {
    var b = 0;
    return function(a) {
        return $jscomp.SYMBOL_PREFIX + (a || "") + b++
    }
}();
$jscomp.initSymbolIterator = function() {
    $jscomp.initSymbol();
    var b = $jscomp.global.Symbol.iterator;
    b || (b = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
    "function" != typeof Array.prototype[b] && $jscomp.defineProperty(Array.prototype, b, {
        configurable: !0,
        writable: !0,
        value: function() {
            return $jscomp.arrayIterator(this)
        }
    });
    $jscomp.initSymbolIterator = function() {}
};
$jscomp.arrayIterator = function(b) {
    var a = 0;
    return $jscomp.iteratorPrototype(function() {
        return a < b.length ? {
            done: !1,
            value: b[a++]
        } : {
            done: !0
        }
    })
};
$jscomp.iteratorPrototype = function(b) {
    $jscomp.initSymbolIterator();
    b = {
        next: b
    };
    b[$jscomp.global.Symbol.iterator] = function() {
        return this
    };
    return b
};
$jscomp.iteratorFromArray = function(b, a) {
    $jscomp.initSymbolIterator();
    b instanceof String && (b += "");
    var c = 0,
        g = {
            next: function() {
                if (c < b.length) {
                    var e = c++;
                    return {
                        value: a(e, b[e]),
                        done: !1
                    }
                }
                g.next = function() {
                    return {
                        done: !0,
                        value: void 0
                    }
                };
                return g.next()
            }
        };
    g[Symbol.iterator] = function() {
        return g
    };
    return g
};
$jscomp.polyfill("Array.prototype.keys", function(b) {
    return b ? b : function() {
        return $jscomp.iteratorFromArray(this, function(a) {
            return a
        })
    }
}, "es6", "es3");
(function(b) {
    var a = {
            vertical: {
                x: !1,
                y: !0
            },
            horizontal: {
                x: !0,
                y: !1
            },
            both: {
                x: !0,
                y: !0
            },
            x: {
                x: !0,
                y: !1
            },
            y: {
                x: !1,
                y: !0
            }
        },
        c = {
            duration: "fast",
            direction: "both"
        },
        g = /^(?:html)$/i,
        e = function(a) {
            var c = b(window),
                e = g.test(a[0].nodeName);
            if (e) var h = {
                top: 0,
                left: 0,
                bottom: 0,
                right: 0
            };
            else {
                var f = a[0];
                var t = document.defaultView && document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle(f, null) : f.currentStyle;
                var u = document.defaultView && document.defaultView.getComputedStyle ? !0 : !1;
                h = parseFloat(u ? t.borderTopWidth :
                    b.css(f, "borderTopWidth")) || 0;
                var r = parseFloat(u ? t.borderLeftWidth : b.css(f, "borderLeftWidth")) || 0,
                    q = parseFloat(u ? t.borderBottomWidth : b.css(f, "borderBottomWidth")) || 0;
                f = parseFloat(u ? t.borderRightWidth : b.css(f, "borderRightWidth")) || 0;
                h = {
                    top: h,
                    left: r,
                    bottom: q,
                    right: f,
                    vertical: h + q,
                    horizontal: r + f
                }
            }
            c = {
                top: (e ? c : a).scrollTop(),
                left: (e ? c : a).scrollLeft()
            };
            r = {
                right: e ? 0 : a.innerWidth() - a[0].clientWidth,
                bottom: e ? 0 : a.innerHeight() - a[0].clientHeight
            };
            q = a[0].getBoundingClientRect();
            return {
                border: h,
                scroll: c,
                scrollbar: r,
                rect: {
                    top: e ? 0 : q.top,
                    left: e ? 0 : q.left,
                    bottom: e ? a[0].clientHeight : q.bottom,
                    right: e ? a[0].clientWidth : q.right
                }
            }
        };
    b.fn.extend({
        scrollintoview: function(h) {
            h = b.extend({}, c, h);
            h.direction = a["string" === typeof h.direction && h.direction.toLowerCase()] || a.both;
            var f = "";
            !0 === h.direction.x && (f = "horizontal");
            !0 === h.direction.y && (f = f ? "both" : "vertical");
            var l = this.eq(0),
                m = l.closest(":scrollable(" + f + ")");
            if (0 < m.length) {
                m = m.eq(0);
                var p = e(l);
                f = e(m);
                l = p.rect.top - (f.rect.top + f.border.top);
                var t = f.rect.bottom - f.border.bottom -
                    f.scrollbar.bottom - p.rect.bottom,
                    u = p.rect.left - (f.rect.left + f.border.left);
                p = f.rect.right - f.border.right - f.scrollbar.right - p.rect.right;
                var r = {};
                !0 === h.direction.y && (0 > l ? r.scrollTop = f.scroll.top + l : 0 < l && 0 > t && (r.scrollTop = f.scroll.top + Math.min(l, -t + m.height())));
                !0 === h.direction.x && (0 > u ? r.scrollLeft = f.scroll.left + u : 0 < u && 0 > p && (r.scrollLeft = f.scroll.left + Math.min(u, -p)));
                b.isEmptyObject(r) ? b.isFunction(h.complete) && h.complete.call(m[0]) : (g.test(m[0].nodeName) && (m = b("html,body")), m.animate(r, h.duration).eq(0).queue(function(a) {
                    b.isFunction(h.complete) &&
                        h.complete.call(m[0]);
                    a()
                }))
            }
            return this
        }
    });
    var h = {
        auto: !0,
        scroll: !0,
        visible: !1,
        hidden: !1
    };
    b.extend(b.expr[":"], {
        scrollable: function(b, c, e, m) {
            c = a["string" === typeof e[3] && e[3].toLowerCase()] || a.both;
            e = document.defaultView && document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle(b, null) : b.currentStyle;
            var f = h[e.overflowX.toLowerCase()] || !1,
                k = h[e.overflowY.toLowerCase()] || !1,
                l = g.test(b.nodeName);
            if (!f && !k && !l) return !1;
            b = {
                height: {
                    scroll: b.scrollHeight,
                    client: b.clientHeight
                },
                width: {
                    scroll: b.scrollWidth,
                    client: b.clientWidth
                },
                scrollableX: function() {
                    return (f || l) && this.width.scroll > this.width.client
                },
                scrollableY: function() {
                    return (k || l) && this.height.scroll > this.height.client
                }
            };
            return c.y && b.scrollableY() || c.x && b.scrollableX()
        }
    })
})(jQuery);

function showDisclaimer(b) {
    this.redirect = function() {
        alert("Failed to update record.  please try again later.");
        window.location = "index.html"
    };
    $("#disclaimer").dialog({
        autoOpen: !0,
        draggable: !0,
        modal: !0,
        resizable: !1,
        height: 350,
        width: 550,
        closeOnEscape: !1,
        title: "Disclaimer:",
        position: "center",
        buttons: {
            "I Accept": function() {
                $("[id$=chkAccept]").is(":checked") ? $.ajax({
                    url: "Controls/AcceptDisclaimer.ashx",
                    data: {
                        disclaimer: "accept",
                        uid: b,
                        p: window.location.search
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "xml",
                    async: !1,
                    success: function(a) {
                        "OK" != $(a).find("disclaimer").text() && redirect();
                        $("#disclaimer").dialog("destroy")
                    },
                    error: function() {
                        redirect()
                    }
                }) : alert("Please acknowledge the disclaimer by click on the checkbox")
            },
            Cancel: function() {
                $.ajax({
                    url: "Controls/AcceptDisclaimer.ashx",
                    data: {
                        disclaimer: "cancel"
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "xml",
                    async: !1,
                    success: function(a) {
                        $(window).unbind("beforeunload");
                        $("#disclaimer").dialog("destroy")
                    }
                });
                window.location = "index.html"
            }
        }
    });
    $(".ui-dialog-titlebar-close").hide()
}

function ackDisclaimer(b, a, c, g) {
    $("#divAckDisclaimer").remove();
    $("body").append('<div id="divAckDisclaimer"  class="LegalDisclaimer" style="display:none"></div>');
    b += '<br /><br /><br/><div style="vertical-align:middle"><input type="checkbox" id="cbWarnAccepted" /><label for="cbWarnAccepted">I Agree</label></div>';
    var e = $("#divAckDisclaimer");
    e.html(b);
    a > $(window).width() && (a = .98 * $(window).width());
    isMobile() && $("#cbWarnAccepted").css({
        width: 25,
        height: 25
    });
    e.dialog({
        autoOpen: !0,
        draggable: !0,
        modal: !0,
        resizable: !1,
        height: c,
        width: a,
        closeOnEscape: !1,
        title: "Please acknowledge:",
        position: "center",
        buttons: [{
            id: "btnWarnOK",
            text: "OK",
            click: function() {
                g(!0);
                e.dialog("destroy").hide()
            }
        }, {
            id: "btnWarnCancel",
            text: "Cancel",
            click: function() {
                g(!1);
                e.dialog("destroy").hide()
            }
        }],
        open: function() {
            $("#btnWarnOK").button("option", "disabled", !0);
            $("#cbWarnAccepted").removeAttr("checked").change(function() {
                $("#btnWarnOK").button("option", "disabled", !$(this).is(":checked"))
            })
        }
    });
    $(".ui-dialog-titlebar-close").hide();
    isMobile() && $(".ui-button").css({
        height: 25
    })
}

function ackDisclaimerNew(b, a, c, g, e) {
    $("#divAckDisclaimer").remove();
    $("body").append('<div id="divAckDisclaimer"  class="LegalDisclaimer" style="padding:10px 15px 0 15px;display:none"><div id="msgbody"></div></div>');
    $dlg = $("#divAckDisclaimer > #msgbody");
    $dlg.append('<div class="yousignhere" style="width:100%">You Sign Here</div>');
    $dlg.append('<div class="highlightbandMsg" style="width:100%;padding-top:20px;height:45px;text-align:center"><span class="PageTitle">Please Agree</span></div>');
    isMobile() &&
        ($("#msgbody").css("font-size", "15px"), c *= 1.2);
    $dlg.append('<div style="text-align:left;margin-top:20px">' + (b + '<br /><br /><br/><div style="vertical-align:middle"><input type="checkbox" id="cbWarnAccepted" class="inputs"/><label for="cbWarnAccepted" style="font-size:12px">I Agree</label></div>') + "</div>");
    $dlg = $("#divAckDisclaimer");
    a > $(window).width() && (a = .98 * $(window).width());
    isMobile() && $("#cbWarnAccepted").css({
        width: 25,
        height: 25
    });
    $dlg.dialog({
        autoOpen: !0,
        draggable: !0,
        modal: !0,
        resizable: !1,
        height: c,
        width: a,
        closeOnEscape: !1,
        title: "Please acknowledge:",
        buttons: [{
            id: "btnWarnOK",
            text: "Agree",
            click: function() {
                g(!0);
                $dlg.dialog("destroy").hide()
            }
        }, {
            id: "btnWarnCancel",
            text: "Cancel",
            click: function() {
                g(!1);
                $("#divAckDisclaimer").dialog("destroy").hide()
            }
        }],
        open: function() {
            isMobile() && ($("#btnWarnOK").css({
                "font-size": "20px",
                "margin-right": "200px"
            }), $("#btnWarnCancel").css({
                "font-size": "20px"
            }));
            e && $dlg.dialog("option", "position", {
                my: "center top",
                at: "center top+150",
                of: e
            });
            $("#btnWarnOK").button("option",
                "disabled", !0);
            $("#cbWarnAccepted").removeAttr("checked").change(function() {
                $("#btnWarnOK").button("option", "disabled", !$(this).is(":checked"))
            })
        }
    });
    $(".ui-dialog-titlebar").hide()
}

function ackDisclaimerMobile(b, a, c, g) {
    $("#divAckDisclaimer").remove();
    $("body").append('<div id="divAckDisclaimer"  class="LegalDisclaimer ui-corner-all" data-rel="dialog" data-dismissible="false" data-role="popup"  data-overlay-theme="b" data-theme="b" style="padding:10px 20px;width:' + a + ";height:" + c + '"></div>');
    a = $("#divAckDisclaimer");
    b += '<br /><br /><br/><input type="checkbox" id="cbWarnAccepted" class="custom" inputs" /><label for="cbWarnAccepted">I Agree</label>';
    a.append(' <div role="main" class="ui-content">');
    a.append(b);
    a.append('<br/><a id="btnWarnOK" href="javascript:' + g + '(true)"   class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b">Continue</a>');
    a.append(' <a href="#" class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b" data-rel="back">Cancel</a>');
    a.append("</div>");
    a.popup().popup("open")
}

function showDisclaimerMobile() {
    this.redirect = function() {
        alert("Failed to update record.  please try again later.");
        window.location = "index.html"
    };
    window.location.href.split("#");
    $("#disclaimer").popup().popup("open");
    $("#btnDAccept").click(function() {
        $("[id$=chkAccept]").is(":checked") ? $.ajax({
            url: "Controls/AcceptDisclaimer.ashx",
            data: {
                disclaimer: "accept"
            },
            contentType: "application/json; charset=utf-8",
            dataType: "xml",
            async: !1,
            success: function(b) {
                "OK" != $(b).find("disclaimer").text() && redirect();
                $("#disclaimer").popup("close");
                window.location = window.location.href.split("#")[0]
            },
            error: function() {
                redirect()
            }
        }) : alert("Please acknowledge the disclaimer by click on the checkbox")
    });
    $("#btnDCancel").click(function() {
        $.ajax({
            url: "Controls/AcceptDisclaimer.ashx",
            data: {
                disclaimer: "cancel"
            },
            contentType: "application/json; charset=utf-8",
            dataType: "xml",
            async: !1,
            success: function(b) {
                $("#disclaimer").popup("close")
            }
        });
        window.location = "index.html"
    })
};

function checkSession() {
    $.ajax({
        url: "../ViewStatus.aspx",
        data: {
            action: "checksession",
            sender: "refresh",
            rnd: (new Date).getTime()
        },
        contentType: "application/json; charset=utf-8",
        dataType: "xml",
        cacheResponse: !1,
        async: !0,
        success: function(b) {
            "" == $.trim(b) && (window.location = "../index.html");
            window.setTimeout(checkSession, 6E4)
        },
        error: function(b, a, c) {
            window.location = "../index.html"
        }
    })
}
checkSession();

function CloseWindow() {
    window.open("", "_self", "");
    window.close()
}
$(document).ready(function() {
    $("[id$=btnClear]").click(function() {
        $("[id$=txtSearch]").val("");
        document.getElementById("btnMasterSearch").click();
        return !1
    });
    $("[id$=btnLogout]").click(function() {
        $.ajax({
            url: "Controls/AcceptDisclaimer.ashx",
            data: {
                tm: (new Date).getTime()
            },
            contentType: "application/json; charset=utf-8",
            async: !1,
            success: function(b) {
                document.location.href = "index.html"
            }
        })
    });
    isMobile() && $("[id$=btnLogoutM]").click(function() {
        window.location = "default.aspx"
    })
});

function getInternetExplorerVersion() {
    var b = 8;
    "Microsoft Internet Explorer" == navigator.appName && null != /MSIE ([0-9]{1,}[.0-9]{0,})/.exec(navigator.userAgent) && (b = parseFloat(RegExp.$1));
    return b
}

function isiPad() {
    return navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/Android/i)
}

function isiPhone() {
    return navigator.userAgent.match(/iPhone/i)
}

function isMobile() {
    return null != (navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/iPhone/i))
}

function GetMailTemplate(b, a, c, g, e, h, f, k) {
    $.ajax({
        url: "Controls/MailSetupHandler.ashx" + (e && h ? "?i=" + e + "&l=" + h : ""),
        data: {
            action: "getmtemplates",
            data: b,
            r: a,
            oid: "undefined" != typeof c ? c : 0,
            ot: "undefined" != typeof g ? g : 0,
            ref: f,
            tm: (new Date).getTime()
        },
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        async: !1,
        success: function(l) {
            if (1 >= l.length || void 0 === l.length) $("#spanTmpl").css("display", "none"), $("#ddlTemplates").css("display", "none");
            else {
                $("#ddlTemplates").empty();
                for (var m = 0; m < l.length; m++) $("#ddlTemplates").append('<option value="' +
                    l[m].Id + '"' + (parseInt(l[m].Id) == parseInt(k) ? "selected" : "") + ">" + ("" != l[m].Name ? l[m].Name : "[Default]") + "</option>");
                $("#spanTmpl").css("display", "");
                $("#ddlTemplates").css("display", "")
            }
            SelectMailTemplate(b, a, c, 0 < parseInt(k) ? null : g, e, h, f)
        }
    })
}

function SelectMailTemplate(b, a, c, g, e, h, f) {
    $.ajax({
        url: "Controls/MailSetupHandler.ashx" + (e && h ? "?i=" + e + "&l=" + h : ""),
        data: {
            action: "getm",
            mailType: b,
            templateId: g ? null : $("#ddlTemplates").val(),
            r: a,
            oid: "undefined" != typeof c ? c : 0,
            ot: "undefined" != typeof g ? g : 0,
            ref: f,
            tm: (new Date).getTime()
        },
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        async: !1,
        success: function(a) {
            if ("ok" != a.status) Common.obj.showWarning(a.msg, 200, 300, "Failed");
            else {
                $editor = $("textarea.editor").ckeditorGet();
                var b = 0 <= a.misc.indexOf("<p") ?
                    a.misc : a.misc.replace(/\n/g, "<br/>");
                b = b.replace(/#.+?#/g, function(a) {
                    return "[[" + a + "]]"
                });
                $editor.setData(b);
                setTimeout(function() {
                    $editor.resetDirty()
                }, 1E3);
                $("#txtSubject").val(a.msg)
            }
        }
    })
}

function EditMailForm(b) {
    this.editMail = function(a, c, g, e, h, f, k, l, m, p) {
        "undefined" == typeof CKEDITOR.instances.txtNote && initEditor();
        Send && Send.obj && Send.obj.emsg && Send.obj.emsg && "" != Send.obj.emsg.bb ? ($("#spanTmpl").hide(), $("#ddlTemplates").hide(), $editor = $("textarea.editor").ckeditorGet(), f = Send.obj.emsg.bb.replace(/\n/g, "<br/>"), f = f.replace(/#\w+?#/g, function(a) {
                return "[[" + a + "]]"
            }), $editor.setData(f), setTimeout(function() {
                $editor.resetDirty()
            }, 1E3), $("#txtSubject").val(Send.obj.emsg.ss)) : "" != $.trim($("#txtNote").val()) &&
            "undefined" == typeof b && "undefined" == typeof h || GetMailTemplate(a, b, h, f, k, l, m, p);
        f = {};
        f[c] = function() {
            $editor = $("textarea.editor").ckeditorGet();
            var a = $editor.getData().replace(/\[\[/g, "").replace(/\]\]/g, "");
            $(this).dialog("close");
            $("#txtNote").val(a);
            "function" == typeof e && e(a, $("#ddlMailType").val(), $("#txtSubject").val())
        };
        f.Reset = function() {
            GetMailTemplate(a, void 0, void 0, void 0, void 0, void 0, m)
        };
        f[g] = function() {
            $(this).dialog("close")
        };
        $("#pnlMsg").dialog({
            autoOpen: !0,
            modal: !0,
            draggable: !0,
            height: 500,
            width: 770,
            closeOnEscape: !1,
            resizable: !1,
            title: "Notification Email Text",
            position: "center",
            open: function() {
                if ("undefined" != typeof h) {
                    var a = $("#pnlMsg").find("#divMailType");
                    a.show();
                    a.find("#ddlMailType").empty();
                    for (var c = 0; c < mailtype.length; c++) mailtype[c].IsSystemMsg || a.find("#ddlMailType")[0].options.add(new Option(mailtype[c].SetupType, mailtype[c].Id));
                    $("#pnlMsg").dialog("option", "height", "520");
                    a = a.find("#ddlMailType");
                    a.unbind("change").change(function() {
                        GetMailTemplate(a.val(), b, h, void 0,
                            void 0, void 0, m)
                    });
                    $("#ddlTemplates").unbind("change").change(function() {
                        SelectMailTemplate(a.val(), b, h, void 0, void 0, void 0, m)
                    })
                } else $("#pnlMsg").find("#divMailType").hide();
                $("#txtNote").focus()
            },
            buttons: f
        });
        $(".ui-dialog-titlebar-close").hide()
    };
    initEditor = function() {
        $.widget("ui.dialog", $.ui.dialog, {
            _allowInteraction: function(a) {
                if (this._super(a) || a.target.ownerDocument != this.document[0] || $(a.target).closest(".cke_dialog").length || $(a.target).closest(".cke").length) return !0
            },
            _moveToTop: function(a,
                b) {
                a && this.options.modal || this._super(a, b)
            }
        });
        $(".editor").ckeditor({
            width: "99%",
            height: "300px",
            startupOutlineBlocks: !0,
            scayt_autoStartup: !0,
            extraPlugins: "font,find,print,preview,colorbutton,richcombo,dialog,placeholder,placeholder_select",
            toolbar: [{
                name: "templates",
                items: ["placeholder_select"]
            }, {
                name: "document",
                items: ["Preview"]
            }, {
                name: "clipboard",
                items: "Cut Copy Paste PasteText PasteFromWord - Undo Redo".split(" ")
            }, {
                name: "editing",
                items: ["Find", "Replace", "-", "SelectAll", "-"]
            }, {
                name: "basicstyles",
                items: "Bold Italic Underline Strike Subscript Superscript - RemoveFormat".split(" ")
            }, {
                name: "paragraph",
                items: "NumberedList BulletedList - Outdent Indent - Blockquote CreateDiv - JustifyLeft JustifyCenter JustifyRight JustifyBlock - BidiLtr BidiRtl Language".split(" ")
            }, {
                name: "colors",
                items: ["TextColor", "BGColor"]
            }, {
                name: "styles",
                items: ["Styles", "Format", "Font", "FontSize"]
            }],
            placeholder_select: {
                placeholders: templ
            }
        });
        CKFinder.setupCKEditor($("textarea.editor").ckeditorGet(), "ckfinder/")
    }
}

function mailTemplateItemSelected(b) {
    $("#txtNote").focus();
    var a = $("#txtNote").getSelection();
    $("#txtNote").insertText(b, a.start, !0)
}

function spin(b, a) {
    a ? (a = (new Spinner).spin(), $("#divWait").remove(), b.append('<div id="divWait" style="width:100%;height:100%;position:absolute;left:0;top:0;opacity:0.6;background-color:white;z-index:999999;"></div>'), $("#divWait").append(a.el), $("#divWait").show()) : $("#divWait").remove()
}
$(document).ready(function() {
    var b = $("header");
    $(window).scroll(function() {
        100 < $(this).scrollTop() ? b.addClass("fix") : 100 >= $(this).scrollTop() && b.hasClass("fix") && b.removeClass("fix")
    });
    $(".search-icon").hover(function() {
        $(this).children(":first-child").toggleClass("invisible");
        $(this).children(":last-child").toggleClass("invisible")
    });
    $(".tab-li").click(function() {
        var a = "#tab" + $(this).data("tab");
        $(".tab-content").removeClass("visible");
        $(".tab-li").removeClass("active-tab");
        $(a).toggleClass("visible");
        $(this).toggleClass("active-tab")
    });
    $(".option-name").click(function() {
        $(".tab-settings-options .item").removeClass("active-option");
        $(this).parent().addClass("active-option")
    });
    $(".collapsable>a").click(function() {
        var a = $(this).parent();
        a.hasClass("collapsed") ? a.removeClass("collapsed") : a.addClass("collapsed")
    })
});
String.prototype.format = function() {
    for (var b = this, a = 0; a < arguments.length; a++) b = b.replace("{" + a + "}", arguments[a]);
    return b
};

function subblockOpen(b, a, c) {
    1 != c && $(".float-menu").removeClass("hidden-left").removeClass("hidden");
    $(b).toggleClass(a)
}

function subblockOpen2(b, a) {
    $(".float-menu").removeClass("hidden-left").removeClass("hidden");
    $(b).toggleClass(a);
    setTop()
}
parseQueryString = function() {
    var b, a = /\+/g,
        c = /([^&=]+)=?([^&]*)/g,
        g = window.location.search.substring(1);
    for (urlParams = {}; b = c.exec(g);) urlParams[decodeURIComponent(b[1].replace(a, " "))] = decodeURIComponent(b[2].replace(a, " "));
    return urlParams
};
var fparams = parseQueryString();

function KeepSession() {
    this.init = function() {
        keepme.start = 30;
        window.setTimeout(refreshSession, 6E4)
    };
    refreshSession = function() {
        0 != keepme.start && (keepme.start--, $.ajax({
            url: "ViewStatus.aspx",
            data: {
                action: "getprops",
                sender: "refresh",
                rnd: (new Date).getTime()
            },
            contentType: "application/json; charset=utf-8",
            dataType: "xml",
            cacheResponse: !1,
            async: !0,
            success: function(b) {
                window.setTimeout(refreshSession, 6E4)
            },
            error: function(b, a, c) {
                window.setTimeout(refreshSession, 6E4)
            }
        }))
    }
}
var keepme = new KeepSession;
$(document).ready(function() {
    keepme.init()
});
parseQueryString = function() {
    var b = /\+/g,
        a = /([^&=]+)=?([^&]*)/g,
        c = window.location.search.substring(1);
    for (urlParams = {}; void 0 === a.exec(c);) urlParams[decodeURIComponent((void 0)[1].replace(b, " "))] = decodeURIComponent((void 0)[2].replace(b, " "));
    return urlParams
};
fparams = parseQueryString();

function Fill() {
    Fill.prototype.readonly = [];
    Fill.prototype.toShow = [];
    var b = !1,
        a = [],
        c = [],
        g = [],
        e = {
            position: {
                my: "left bottom+35"
            }
        },
        h = (new Spinner).spin(),
        f = -1;
    this.init = function() {
        $(".grayBand").hide();
        fill.url = window.location.search.replace("?", "");
        $("#imgPage").load(function() {
            $(this).show();
            fill.countRequired();
            $("#divWait").hide()
        });
        refresh(1);
        $("#lnkExit").yshbutton("E879");
        $("#lnkMenu").yshbutton("E896").click(function() {
            $("#divMenu").is(":visible") ? $("#divMenu").animate({
                    bottom: 20,
                    opacity: 0
                }, "400",
                function() {
                    $("body").unbind("click");
                    $("#divMenu").hide()
                }) : $("#divMenu").show().animate({
                bottom: 130,
                opacity: 1
            }, "400", function() {
                $("body").unbind("click").click(function() {
                    $("body").unbind("click");
                    $("#lnkMenu").click()
                })
            })
        });
        $("#ddlPage").change(function() {
            save(!1, !1, 0, $("#ddlPage").val());
            $("#ddlPage").blur()
        }).blur(function() {
            $("#ddlPage").hide();
            $("#lbPage").show()
        });
        $("#ddlDoc").change(function() {
            $("#ddlDoc").blur();
            save(!1, !1, 0, $("#ddlPage").val())
        }).blur(function() {
            $("#ddlDoc").hide();
            $("#lbDoc").show()
        });
        $("#lbNext").text("Next.Page").yshbutton("E5CC").click(function() {
            save(!1, !1, 0, "p_" + $("#ddlDoc").val() + "_" + (parseInt($("#ddlPage").val()) + 1 + "_n"))
        });
        $("#lbPrev").text("Prev.Page").yshbutton("E5CB").click(function() {
            save(!1, !1, 0, "p_" + $("#ddlDoc").val() + "_" + (parseInt($("#ddlPage").val()) - 1 + "_p"))
        });
        $("#lnkSave").yshbutton("E24D").click(function() {
            save(!1, !1)
        }).attr("title", "Save");
        $(window).resize(function() {
            resizeWindow()
        });
        $("#lbDoc").click(function() {
            $("#lbDoc").is(":visible") && ($("#lbDoc").hide(),
                $("#ddlDoc").show().focus())
        });
        $("#lbPage").click(function() {
            $("#lbPage").is(":visible") && ($("#lbPage").hide(), $("#ddlPage").show().focus())
        });
        $("body").css("max-height", "500px");
        isMobile() && $("#divExit").insertBefore($("#docEnum"));
        $("#divMasterHelp").show();
        $(window).unload(function() {
            fill.readOnly || save()
        });
        $("#lnkHelp").yshbutton("E8FD").click(function() {
            showInfo()
        });
        $("#btnCompCtrl").text("Finish").yshbutton("E877").click(function() {
            fill.selectNextControl(3)
        });
        $("#btnNextCtrl").text("Next field").yshbutton("E038").click(function() {
            fill.selectNextControl(2)
        });
        $("#btnSend").text("Send").yshbutton("E0BE").click(function() {
            save(!1, !1, 0, null, !1, 4)
        });
        $("#btnCancelSend").text("Cancel").yshbutton("E92B").click(function() {
            cancelRequest()
        });
        isMobile && $(".grayBand img[title]").removeAttr("title")
    };
    uploaderCallback = function(a) {
        a = a.split(";");
        "ok" !== a[0] ? Common.obj.showWarningNew("Failed to attach file", 300, 400, "Error", "#divprnt") : fill.request.att.push({
            ID: a[1],
            Name: a[2]
        })
    };
    deleteAttachment = function(a) {
        $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "rema",
                rid: fill.url,
                aid: a,
                tm: (new Date).getTime()
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: !0,
            success: function(b) {
                a.hasOwnProperty(status) && "ok" != a.status ? Common.obj.showWarningNew(a.msg, 300, 400, "Error", "#divprnt") : (fill.request.att = b, uploader.refresh(b))
            },
            error: function() {
                Common.obj.showWarningNew("Failed to remove attachment.", 300, 400, "Error", "#divprnt")
            }
        })
    };
    virtNavigation = function(a) {};
    showCompleteButton = function() {
        !fill.request.cmp || fill.request.complete ? $("#divComplete").remove() : ($("#divComplete").remove(),
            $("#lnkComplete").hide(), $("#imgPage").offset(), $("body").append('<div id="divComplete" class="ui-corner-all vComplete" ' + ("2" === fill.request.sclick ? ">Click to submit all documents<br/>" : 'style="height:55px">Click to sign all documents<img src="/Images/ysh_arrow.png"style="width:70px"/>') + "</div>"), $("#divComplete").css({
                left: 15,
                top: $("#hdr").height() + 10
            }).hover(function() {
                $("#divComplete").css({
                    opacity: .8,
                    cursor: "pointer"
                })
            }, function() {
                $("#divComplete").css({
                    opacity: .5,
                    cursor: "default"
                })
            }).click(function() {
                save(!0,
                    !0, -1)
            }).draggable({
                start: function(a) {
                    a.stopPropagation()
                },
                stop: function(a) {
                    a.stopPropagation()
                }
            }))
    };
    refresh = function(a) {
        $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "fill",
                rid: fill.url,
                ft: 1 === a ? 1 : 0,
                pg: $("#ddlPage").val(),
                tm: (new Date).getTime()
            },
            dataType: "json",
            async: !0,
            contentType: "application/json; charset=utf-8",
            success: function(b) {
                b.hasOwnProperty("status") && "ok" != b.status ? Common.obj.showWarningNew(b.msg, 300, 400, "Error", 200 < $("#docarea").width() ? "#divprnt" : void 0) : (b.disc && showDisclaimer(),
                    b.v ? ($("#lnkMenu").hide(), $("#btnSend").css("display", "block"), $("#btnCancelSend").css("display", "block")) : ($("#btnNextCtrl").css("display", "block"), $("#btnCompCtrl").css("display", "block"), $("#divExit").css("display", "block")), b.code ? confirmIdentity(b, 1 === a && !b.complete && 0 < b.map.length) : ($(".grayBand").show(), populate(b, 1 === a && !b.complete && 0 < b.map.length)))
            },
            error: function(a, b, c) {
                window.location = "/SystemMessage.aspx?t=0&msg=Invalid Parameters. Please contact support."
            }
        })
    };
    confirmIdentity = function(a,
        b) {
        $("#divPage").css({
            width: a.w
        });
        $("#lnkComplete").hide();
        $("#divCode").dialog({
            height: 150,
            width: 400,
            modal: !0,
            title: "Confirm Identity:",
            closeOnEscape: !1,
            open: function() {
                $(".ui-dialog-titlebar-close").hide();
                $(".ui-dialog-titlebar").css({
                    "font-size": "15px",
                    color: "white",
                    "background-color": "gray"
                });
                $("#txtCode").unbind("change").change(function() {
                    "" === $.trim($(this).val()) ? $("#btnCodeOk").attr("disabled", "disabled") : $("#btnCodeOk").removeAttr("disabled")
                }).change();
                setTimeout(sendVerifyCode, 1)
            },
            position: "left top",
            buttons: {
                Submit: {
                    text: "Submit",
                    id: "btnCodeOk",
                    click: function() {
                        setTimeout(verifyCode(a, b), 1)
                    }
                }
            }
        })
    };
    sendVerifyCode = function() {
        $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "smscode",
                rid: fill.url,
                tm: (new Date).getTime()
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: !0,
            success: function(a) {
                "Failed" == a.status && alert("Failed to send SMS")
            }
        })
    };
    verifyCode = function(a, b) {
        $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "code",
                rid: fill.url,
                code: $("#txtCode").val(),
                tm: (new Date).getTime()
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: !0,
            success: function(c) {
                c && c.status && "ok" === c.status.toLowerCase() ? ($("#divCode").dialog("destroy"), $(".grayBand").show(), setTimeout(populate(a, b), 1)) : $("#txtCode").val("")
            }
        })
    };
    cleanUp = function() {
        a = [];
        c = [];
        $("#imgPage").hide();
        $(".mapSelected").removeClass("mapSelected");
        $("#divPage").find("[id*=cc_]").remove()
    };
    populate = function(a, b) {
        cleanUp();
        fill.request = a;
        fill.mult = b;
        url = fill.request.url;
        setTimeout(function() {
                generateDocMap()
            },
            0);
        $("#divPage").css({
            width: a.w,
            height: a.h
        });
        resizeWindow();
        $("#imgPage").attr("src", "controls/FillH.ashx?action=getpage&p=" + a.img).attr("alt", a.img);
        a.flds && setTimeout(function() {
            positionFields()
        }, 1);
        var c = $("#ddlDoc");
        c.find("option").remove();
        for (var e = "", h = 0; h < a.docs.length; h++) c[0].options.add(new Option(a.docs[h].doctitle, a.docs[h].id)), 1 == a.docs[h].gid && (e = a.docs[h].id, $("#lbDoc").text(a.docs[h].doctitle));
        "" != $.trim(e) && (c.val(e), fill.request.cdoc = e);
        c = $("#ddlPage");
        c.find("option").remove();
        for (h = 1; h <= a.pc; h++) c[0].options.add(new Option(h, h - 1));
        "" != $.trim(e) && (c.val(a.pg), $("#lbPage").text(a.pg + 1 + " of " + a.pc));
        !fill.request.slf && !fill.request.il || fill.request.complete || ($("#lbBack").show(), $("#lbBack").unbind("click").text("Exit").yshbutton("E879").click(function() {
            checkComplete(2)
        }).attr("title", "Save and exit"));
        fill.readOnly = fill.request.complete && !fill.request.il;
        fill.request.pdf && !fill.request.complete ? $("#lnkDownload").show().unbind("click").yshbutton("E2C4").click(function() {
            save(void 0,
                2)
        }) : $("#lnkDownload").hide();
        fill.request.complete ? $("#lnkAttach").unbind("click").hide() : $("#lnkAttach").yshbutton("E226").unbind("click").click(function() {
            uploader.init("controls/Handler.ashx?action=attach&data=" + url + "&tm=" + (new Date).getTime(), uploaderCallback, "#divprnt", fill.request.att, deleteAttachment)
        }).attr("title", "Attach Document");
        if (fill.request.il) {
            c = $("#ddlSignees");
            c.find("option").remove();
            for (h = 0; h < fill.request.sgn.length; h++) a = fill.request.sgn[h], c[0].options.add(new Option(a.Name,
                a.ID)), 1 == a.Misc && c.val(a.ID);
            $("[id$=ddlSignees]").show().unbind("change").change(function() {
                save(!1, !1, 0)
            });
            $("#divSave").css("width", "50px");
            $("#lblSignees").show()
        }
        showCompleteButton();
        showCompleteDialog();
        fill.request.msg && showInfo(2);
        b && 1 !== fparams.ret && showInfo(1)
    };
    showGuide = function() {
        $("#divInfoDlg").remove();
        $("#warnDlg").remove();
        $("body").append('<div id="divVideo"><iframe width="660" height="415" src="https://www.youtube.com/embed/81Bi0wLVL80?start=58" frameborder="0" allowfullscreen></iframe></div>');
        $("#divVideo").dialog({
            height: 480,
            width: 700,
            title: "Signing YouSignHere Document",
            open: function() {
                $("#divVideo").dialog("option", "position", {
                    my: "center top",
                    at: "center top+150",
                    of: "[id$=divPage]"
                })
            },
            beforeClose: function() {
                $("#divVideo").remove()
            }
        })
    };
    var k = null;
    showMsg = function(a, b) {
        k && clearTimeout(k);
        "" == a ? $("#divMsg").html("").hide() : (1 != b && (a = '<div style="float:left;width: 480px">' + a + '</div><div class="msgclose"><i class="material-icons md-18">&#xE14C</i></div>'), $("#divMsg").html(a), $("#divMsg").show(),
            $(".msgclose").click(function() {
                clearTimeout(k);
                $("#divMsg").html("").hide()
            }), 1 != b && (k = setTimeout(function() {
                $("#divMsg").html("").hide()
            }, 1E4)))
    };
    showInfo = function(a) {
        for (var b = 0, c = 0, e = 0, h = 0; h < fill.request.map.length; h++) {
            e += fill.request.map[h].Pages.length;
            for (var q = 0; q < fill.request.map[h].Pages.length; q++) c += fill.request.map[h].Pages[q].RequiredFields, b += fill.request.map[h].Pages[q].SignCount
        }
        if (0 >= c + b) return "";
        if (1 == a) e = "There are " + e + " page" + (1 == e ? "" : "s") + " in this package" + (0 < b ? (0 < c ? ", " : " and ") +
            b + " place" + (1 == b ? "" : "s") + " to sign" : " ") + (0 < c ? (0 < b ? ", and " : "") + c + " required field" + (1 == c ? "" : "s") + " to populate to complete it." : ""), showMsg(e);
        else {
            if (2 == a || 3 == a) return e = "You still have ", 0 < c && (e += c + " required field" + (1 < c ? "s (pink) " : " ") + " to fill"), 0 < b && (e += (0 < c ? " and " : "") + b + " place" + (1 < b ? "s" : "") + " to sign"), e += " before package is complete.", 3 != a && showMsg(e), e;
            e = '<div style="font-size:12px">There are <strong>' + e + "</strong> page" + (1 == e ? "" : "s") + " in this package. " + (0 < b ? " You will have to sign in <strong>" +
                b + "</strong> place" + (1 == b ? "" : "s") + "." : ".") + (0 < c ? " There " + (1 == c ? "is" : "are ") + c + " field" + (1 == c ? "" : "s") + ", which <strong>must</strong> be filled <strong>prior</strong> to completing the package<br/>" : "");
            e += '</div><br/><strong style="font-size:12px;color:red">Please make sure to complete the whole package.</strong><br/><br/>';
            e += " <br/><br/><strong>Tip 1</strong> Required fields highlighted with pink background. These must be filled before you can sign the document.";
            e += " <br/><br/><strong>Tip 2</strong> Progress bar at the top shows you how much is left.";
            e += ' <br/><br/><a href="javascript:showGuide()" style="color:red">Watch 2 min guide "Signing YouSignHere document"</a>';
            $("body").append('<div id="divInfoDlg" style="display:none"><div id="cmpbody"></div></div>');
            $dlg = $("#cmpbody");
            $dlg.append('<div class="yousignhere" style="width:100%">You Sign Here</div>');
            $dlg.append('<div class="highlightbandMsg" style="width:100%;padding-top:20px;height:45px;text-align:center"><span class="PageTitle">Information</span></div>');
            $dlg.append('<div style="text-align:left;margin-top:10px">' +
                e + "</div>");
            $("#divInfoDlg").dialog({
                autoOpen: !0,
                modal: !0,
                draggable: !0,
                height: 420,
                width: 400,
                closeOnEscape: !0,
                resizable: !1,
                title: "Complete",
                position: {
                    my: "center top",
                    at: "center top+100",
                    of: "#divprnt"
                },
                buttons: {
                    "Got it, continue": function() {
                        $(this).dialog("destroy");
                        $("#divInfoDlg").remove()
                    }
                },
                close: function() {
                    $("#divInfoDlg").remove()
                }
            });
            $(".ui-dialog-titlebar").hide()
        }
    };
    showCompleteDialog = function() {
        var a = !1;
        a = fill.request.il ? 0 <= g.indexOf($("#ddlSignees").val()) : 0 <= g.indexOf(fill.request.c);
        fill.request.complete ?
            ($("#lnkExit").show(), $("#btnCompCtrl").yshbutton("option", "disabled"), $("#btnNextCtrl").yshbutton("option", "disabled"), $("#lnkMenu").yshbutton("option", "disabled").unbind("click"), showMsg('<div style="text-align:center;padding-top:6px;font-size:12px;color:darkgreen">You have completed the request. Completed copies will be sent to you shortly</div>', 1)) : $("#lnkExit").hide();
        fill.request.complete && !a && (g.push(fill.request.il ? $("#ddlSignees").val() : fill.request.c), $("#lnkSave").hide(), $("#lnkDownload").hide(),
            $("#lnkAttach").hide(), (fill.request.slf || fill.request.il || fill.request.v) && $("#lbBack").hide(), $("#lnkExit").unbind("click").click(function() {
                checkComplete(1)
            }), $("#lnkComplete").hide(), $("body").append('<div id="divCmplDialog" style="display:none"><div id="cmpbody"></div></div>'), $dlg = $("#cmpbody"), $dlg.append('<div class="yousignhere" style="width:100%">You Sign Here</div>'), $dlg.append('<div class="highlightbandMsg" style="width:100%;padding-top:20px;height:45px;text-align:center"><span class="PageTitle">Confirmation</span></div>'),
            $dlg.append('<div style="text-align:center;margin-top:10px">You have completed the request.  Completed<br />copies of the signed documents will be emailed to you.</div>'), fill.request.il || fill.request.slf || $dlg.append('<div style="text-align:center;margin-top:10px">We recommend that you close your browser.</div>'), $("#divCmplDialog").dialog({
                autoOpen: !0,
                modal: !0,
                draggable: !0,
                height: 280,
                width: 362,
                closeOnEscape: !0,
                resizable: !1,
                title: "Complete",
                position: {
                    my: "center top",
                    at: "center top+100",
                    of: "#divprnt"
                },
                buttons: {
                    OK: function() {
                        $(this).dialog("destroy");
                        $("#divCmplDialog").remove()
                    }
                },
                close: function() {
                    $("#divCmplDialog").remove()
                }
            }), $(".ui-dialog-titlebar").hide());
        switch (fill.request.sclick) {
            default:
                $("#lnkComplete").hide().unbind("click");
                break;
            case 1:
                $("#lnkComplete").is(":visible") && ($("#lnkComplete").attr("title", "One Click Sign").text("One click sign").unbind("click").yshbutton("E150").click(function() {
                    save(!0, !0, -1)
                }).tooltip(e), setTimeout(function() {
                    $("#lnkComplete").mouseover()
                }, 500), setTimeout(function() {
                        $("#lnkComplete").mouseout()
                    },
                    3E3))
        }
    };
    this.countRequired = function() {
        var b = 0,
            c = 0,
            e = [];
        $("[id*=cc_]").each(function() {
            for (var h = $(this).attr("id"), q = !1, g = 0; g < e.length; g++)
                if (0 <= e[g].indexOf(h)) {
                    q = !0;
                    break
                } if (!q && $(this).is(":visible")) {
                h = "#" + $(this).attr("id");
                q = 1 == $.data($(this)[0], "req");
                var f = $(this).is(":disabled"),
                    A = $(this).is(":checkbox"),
                    w = "",
                    k = !1;
                for (g = 0; g < a.length; g++) {
                    for (var z = 0; z < a[g].length; z++)
                        if (a[g][z][0] == h) {
                            w = a[g].handler.getState();
                            for (k = 0; k < a[g].length; e.push(a[g][k++][0]));
                            k = !0;
                            break
                        } if (k) break
                }
                h = !1;
                k ? h = w ? !1 :
                    !0 : A ? A && (h = !$(this).is(":checked")) : h = "" == $.trim($(this).val());
                q && h && !f && b++;
                $(this).is("div") && 0 == $.data($(this)[0], "sgnd") && c++
            }
        });
        null != fill.cp && (fill.cp.RequiredFields = b, $("[id*=" + fill.d + "_" + fill.cpi + "]").find("#spanReq" + fill.cpi).text(b), $("[id*=" + fill.d + "_" + fill.cpi + "]").find("#spanSign" + fill.cpi).text(c));
        var h = fill.req + b,
            g = fill.sgn + c,
            f = fill.treq + fill.tsgn,
            k = 0 >= f ? 100 : parseInt((f - h - g) / f * 100);
        0 > k && (k = 0);
        $("#pbProgress").val(k);
        isNaN(f - h - g) ? $("#lbProgress").text("") : $("#lbProgress").text(f - h -
            g + " out of " + f);
        virtNavigation(b + c);
        return b
    };
    var l = !1,
        m = null;
    positionFields = function() {
        m = null;
        var b = $("#divPage");
        b.position();
        b.position();
        var e = [],
            h = [];
        l = !0;
        for (var g = 0; g < fill.request.flds.length; g++) {
            var f = fill.request.flds[g];
            if ("" != $.trim(f.id)) {
                switch (f.ftp) {
                    case 1:
                        "" == f.fontsize && (f.fontsize = 12);
                        3 * f.fontsize < f.h ? b.append('<textarea id="cc' + f.id + '"/>') : b.append('<input id="cc' + f.id + '" v="' + f.val + '"/>');
                        $("#cc" + f.id).val(f.val).attr("autocomplete", "off");
                        break;
                    case 2:
                        b.append('<input type="checkbox" style="" id="cc' +
                            f.id + '"/>');
                        $("#cc" + f.id).prop("checked", 1 == f.val);
                        break;
                    case 4:
                        if (1 == f.auto) {
                            b.append('<input id="cc' + f.id + '"/>');
                            for (var k = [], n = 0; n < f.lookup.length; n++) k.push(f.lookup[n]);
                            r = $("#cc" + f.id);
                            r.autocomplete({
                                source: k,
                                minLength: 0
                            }).focus(function() {
                                $(this).autocomplete("search", "")
                            });
                            r.val(f.val)
                        } else {
                            b.append('<select id="cc' + f.id + '"/>');
                            var r = $("#cc" + f.id);
                            for (n = 0; n < f.lookup.length; n++) r[0].options.add(new Option(f.lookup[n]));
                            r.val(f.val).change()
                        }
                        break;
                    case 7:
                        if (f.ro && !f.signed || f.v) continue;
                        b.append('<div style="text-align:center;vertical-align:middle;padding-top:1px" class="ui-corner-all" id="cc' +
                            f.id + '"><img src="" alt=""/></div>');
                        signPrepare(f);
                        f.signed && (f.ro = !1);
                        break;
                    case 8:
                        if (f.ro && !f.signed || f.v) continue;
                        n = '<div style="text-align:center;padding-top:1px;min-width:20px;" ' + (f.signed ? "" : 'class="ui-corner-all"') + ' id="cc' + f.id + '">';
                        20 > Math.min(f.w, f.h) && (f.w = 35, f.h = 30);
                        n += '<img id="ii' + f.id + '" style="width:' + Math.min(30, .8 * Math.min(f.w, f.h)) + 'px" src="" alt=""/>';
                        n += "</div>";
                        b.append(n);
                        initPrepare(f);
                        f.signed && (f.ro = !1, f.showborder = "none");
                        break;
                    case 9:
                        b.append('<span  id="cc' + f.id + '" v="' +
                            f.val + '"/>'), $("#cc" + f.id).html(f.val), f.showborder = "none"
                }
                $.trim(f.grn) && (n = e.indexOf(f.grn), 0 <= n ? n = a[n] : (n = [], e.push(f.grn), a.push(n)), n.push(["#cc" + f.id, f.reqrd]));
                0 < f.dd && (n = h.indexOf(f.dd), 0 <= n ? n = c[n] : (n = [], h.push(f.dd), c.push(n)), n.push("#cc" + f.id));
                positionMe("#cc" + f.id, f)
            }
        }
        for (n = 0; n < a.length; n++) a[n].handler = new GroupedControls, a[n].handler.init(a[n]);
        for (n = 0; n < c.length; n++) 1 >= c[n].length || (c[n].handler = new TaggedControls, c[n].handler.init(c[n]));
        for (g = 0; g < fill.request.flds.length; g++) {
            f =
                fill.request.flds[g];
            b = null;
            for (n = 0; n < a.length; n++) {
                for (e = 0; e < a[n].length; e++)
                    if (a[n][e][0] == "#cc" + f.id) {
                        b = a[n];
                        break
                    } if (null != b) break
            }
            "" != $.trim(f.bv) && (bb = JSON.parse(f.bv.replace(/@/g, "")), f.bb = new behaviorList(f, bb, b))
        }
        l = !1;
        fill.countRequired();
        setTimeout(function() {
            t = !1;
            p = null;
            fill.selectNextControl(fill.request.msg ? 3 : 1)
        }, 1E3)
    };
    var p = null,
        t = !1;
    this.selectNextControl = function(a) {
        var b = null,
            c = 9999,
            e = 1,
            h = 0;
        null != p && (e = parseInt(p.attr("tabindex")) + 1);
        do {
            (3 == a ? $('[tabindex]:enabled[req="1"]').not(".selected").filter(function() {
                return $(this).attr("tabindex") >=
                    e
            }) : $("[tabindex]:enabled").not(".selected").filter(function() {
                return $(this).attr("tabindex") >= e
            })).each(function() {
                var a = parseInt($(this).attr("tabindex"));
                a < c && (c = a, b = $(this))
            });
            if (null != b)
                if ("" == getValue(b)) {
                    t && 1 != $.data(b[0], "req") ? b = null : p = b;
                    t = !1;
                    break
                } else b = null;
            if (null == b) {
                e = c + 1;
                if (e > f) {
                    e = c = 1;
                    if (2 == a) {
                        var g = !0;
                        $('[tabindex]:enabled[req="1"]').each(function() {
                            if ("" == getValue($(this))) return g = !1
                        });
                        if (g && null == findInitial()) break
                    }
                    if (1 < ++h) {
                        t = !0;
                        null != m && "" == getValue(m) && 1 == $.data(m[0], "req") ?
                            (h = 0, m.hasClass("selected") && (b = m), p = b) : b = findInitial();
                        break
                    }
                }
                null == b && (b = findInitial());
                c = 9999
            }
        } while (null == b);
        null == b && (b = findSignature());
        null != b && (selectMe($(b)), makeVisible($(b)));
        null !== b || 2 !== a && 3 !== a ? 3 === a && showInfo(2) : (showMsg(""), m = null, t = !1, p = null, save(!1, !1, 0, "p_" + $("#ddlDoc").val() + "_" + (parseInt($("#ddlPage").val()) + 1 + "_n"), !1, a))
    };
    findInitial = function() {
        var a = null,
            b = $(".init:visible").not(".signed"),
            c = b.not(".selected");
        1 == b.length ? a = b : 1 == c.length ? a = c : 0 < c.length && (a = $($(".init:visible").not(".signed").not(".selected")[0]));
        return a
    };
    findSignature = function() {
        var a = null,
            b = $(".sign:visible").not(".signed");
        1 == b.length ? a = b : 0 < b.length && (a = $($(".sign:visible").not(".signed").not(".selected")[0]));
        return a
    };
    getValue = function(b) {
        if (null == b) return "";
        for (var c = "#" + b.attr("id"), e = !1, f = "", h = 0; h < a.length; h++) {
            for (var g = 0; g < a[h].length; g++)
                if (a[h][g][0] == c) {
                    for (g = 0; g < a[h].length; g++)
                        if (e = !0, $(a[h][g][0]).is(":checkbox")) {
                            if (f = $(a[h][g][0]).is(":checked") ? 1 : "", "" != f) break
                        } else if (f = $(a[h][g][0]).val(), "" != $.trim(f)) break;
                    break
                } if (e) break
        }
        return e ?
            f : b.is(":checkbox") ? b.is(":checked") ? 1 : "" : null === b.val() ? "" : b.val()
    };
    makeVisible = function(a) {
        var b = $(window).scrollTop(),
            c = b + $(window).height(),
            e = $("#divprnt"),
            f = a.offset().top;
        f + a.height() <= c && f >= b || (a = a.offset(), e.scrollTop(a.top))
    };
    var u = !1,
        r = !1;
    selectMe = function(b) {
        if (!b.hasClass("selected")) {
            null == b || b.hasClass("sign") || (m = b);
            $(".selected").each(function() {
                $(this).removeClass("selected");
                $(this).is(":checkbox") ? $(this).css({
                        "outline-color": "",
                        "outline-width": "0"
                    }).change() : $(this).hasClass("sign") ||
                    $(this).hasClass("init") ? $(this).css("background-color", "") : $(this).css("border-width:", "1px")
            });
            for (var c = "#" + b.attr("id"), e = !1, f = 0; f < a.length; f++) {
                for (var h = 0; h < a[f].length; h++)
                    if (a[f][h][0] == c) {
                        for (h = 0; h < a[f].length; h++) $(a[f][h][0]).addClass("selected"), e = !0;
                        break
                    } if (e) break
            }
            e || b.addClass("selected");
            setTimeout(function() {
                b.focus()
            }, 1);
            r || (setTimeout(highlight, 500), r = !0)
        }
    };
    highlight = function() {
        $(".selected").each(function() {
            var a = $.data($(this)[0], "req");
            $(this).is(":checkbox") ? u ? $(this).css({
                "outline-color": a &&
                    !$(this).is(":checked") ? fill.reqc : "gray",
                "outline-width": "2px",
                "outline-style": "solid"
            }) : $(this).css({
                "outline-color": "",
                "outline-width": "0",
                "outline-style": a ? "solid" : "none"
            }) : $(this).hasClass("sign") || $(this).hasClass("init") ? $(this).parent().css("background-color", u ? fill.nonreqc : fill.reqc) : a && "rgb(255, 132, 153)" == $(this).css("background-color") ? $(this).css("border-color", u ? "white" : "black") : $(this).css("border-color", u ? "#C0C0C0" : "black")
        });
        u = !u;
        setTimeout(highlight, 500)
    };
    signPrepare = function(a) {
        var b =
            $("#cc" + a.id);
        b.addClass("sbutton").attr("name", a.id).unbind("click");
        if (a.signed) b.css({
            "background-color": "",
            border: "none"
        }).removeClass("ui-corners-all").find("img").attr("src", "controls/FillH.ashx?action=signature&c=" + fill.request.c + "&f=" + a.c).css({
            width: a.w,
            height: a.h
        }).addClass("signed");
        else if (a.ro || fill.request.cmp) b.find("img").attr("src", "../images/signButton.png");
        else {
            var c = Math.min(a.h, 29);
            b.hover(function() {
                $(this).css("border", "1px solid gray")
            }, function() {
                $(this).css("border", "none")
            }).find("img").attr("src",
                "../images/ysh_arrow.png").click(function() {
                signDocument(a.id)
            }).addClass("fsign sign").css({
                border: "none",
                "max-width": "98px",
                "max-height": c + "px"
            })
        }
        $.data(b[0], "sgnd", a.signed ? 1 : a.ro ? 2 : 0)
    };
    initPrepare = function(a) {
        var b = $("#cc" + a.id);
        b.addClass("sbutton").attr("name", a.id).unbind("click");
        if (a.signed) b.css({
            "background-color": "",
            border: "none"
        }).removeClass("ui-corners-all").addClass("signed").html('<div style="width:100%;height:100%;overflow:hidden" class="f' + fill.request.sf + '">' + a.val + "</div>");
        else if (a.ro) b.find("img").attr("src",
            "../images/signButton.png");
        else {
            var c = Math.min(a.h, 29);
            b.click(function(b) {
                initialDocument(b, a.id)
            }).hover(function() {
                $(this).css("border", "1px solid gray")
            }, function() {
                $(this).css("border", "none")
            }).find("img").attr("src", "../images/initial.png").addClass("fsign init").css({
                border: "none",
                "max-width": "98px",
                "max-height": c + "px"
            })
        }
        $.data(b[0], "sgnd", a.signed ? 1 : a.ro ? 2 : 0)
    };
    positionMe = function(a, c) {
        var e = $(a);
        e.attr("ln", c.ln);
        c.ln > f && (f = c.ln);
        if ("" !== $.trim(a) && ("" !== $.trim(c.prompt) && (e.attr("pmt",
                c.prompt), e.attr("placeholder", c.prompt)), void 0 !== e.attr("id"))) {
            var h = c.l,
                g = c.t,
                k = c.w,
                q = c.h;
            2 === c.ftp ? e.css({
                height: "15px",
                width: "15px"
            }) : (h--, g--);
            1 === c.ftp && (e.css({
                "word-wrap": "break-word"
            }), 0 < c.mlen && e.attr("maxlength", c.mlen));
            9 != c.ftp && 7 !== c.ftp && 0 < c.tab && e.attr("tabindex", c.tab);
            c.tab > f && (f = c.tab);
            var m = .7;
            0 === c.trsp ? c.sign ? m = .8 : 2 === c.ftp || 9 === c.ftp ? m = 1 : c.reqrd && (m = .7) : m = 1;
            e.css({
                left: Math.round(h),
                top: Math.round(g),
                position: "absolute",
                opacity: m
            });
            "null" != c.font && null != c.font && void 0 != c.font &&
                "" != c.font && e.css({
                    "font-family": c.font
                });
            0 >= c.fontsize && (c.fontsize = 12);
            0 < c.fontsize && 8 != c.ftp && e.css({
                "font-size": c.fontsize + "px"
            });
            0 < k && (e.css({
                width: Math.round(k - 2),
                height: Math.round(q - 2),
                border: "none" != c.showborder ? "1px solid #C0C0C0" : "none"
            }).addClass("ui-widget"), !c.sign && (0 >= c.fontsize || q < c.fontsize) ? e.css({
                height: Math.round(q - 2)
            }) : c.sign && e.css({
                height: q + "px",
                border: "none",
                "line-height": q + "px",
                "vertical-align": "middle"
            }));
            "" != c.validator && FieldValidation.obj.initValidator(a, c.prompt, c.validator,
                !1, c.fmt, c.reqrd);
            c.reqrd ? (2 != c.ftp ? e.blur(function() {
                    if (!b) {
                        var a = 8 != c.ftp ? $(this).val() : $(this).text();
                        a == c.prompt && (a = "");
                        setReqState($(this), !("" != $.trim(a) || c.ro || e.is(":disabled")));
                        8 == c.ftp && c.signed && $(this).css({
                            border: ""
                        });
                        l || setTimeout(function() {
                            fill.countRequired()
                        }, 10)
                    }
                }).blur() : e.change(function() {
                    setReqState(e, !e.is(":checked") && !e.attr("disabled"));
                    l || setTimeout(function() {
                        fill.countRequired()
                    }, 10)
                }).change(), $.data(e[0], "req", "1"), e.attr("req", "1")) : c.ro ? 7 != c.ftp && e.css({
                    background: "#EFEFEF"
                }) :
                "none" != c.showborder && e.css({
                    background: fill.nonreqc
                });
            if (1 <= c.valtype && 6 >= c.valtype)
                if (e.is(":enabled") && 9 != c.ftp && 3 >= c.valtype && e.datepicker({
                        changeMonth: !0,
                        changeYear: !0,
                        yearRange: "1920:2030",
                        onClose: function(a, b) {
                            "" != a && 0 > a.indexOf("MM/") && $(this).css({
                                background: fill.nonreqc
                            })
                        }
                    }), 1 === c.ftp && 2 <= c.valtype && 6 >= c.valtype && (e.val() === c.prompt || "" === $.trim(e.val()))) 2 === c.valtype ? e.val($.datepicker.formatDate("mm/dd/yy", new Date)) : 4 === c.valtype ? e.val($.datepicker.formatDate("dd", new Date)) : 5 === c.valtype ?
                    e.val(getMonthName()) : 6 === c.valtype ? e.val($.datepicker.formatDate("yy", new Date)) : e.val($.datepicker.formatDate("mm/dd/yy", new Date)), $.data(e[0], "rosv", "1");
                else if (9 === c.ftp && 2 <= c.valtype && 6 >= c.valtype && "" === $.trim(e.text())) {
                switch (parseInt(c.valType)) {
                    case 2:
                        e.text($.datepicker.formatDate("mm/dd/yy", new Date));
                        break;
                    case 4:
                        e.text($.datepicker.formatDate("dd", new Date));
                        break;
                    case 5:
                        e.text(getMonthName());
                        break;
                    case 6:
                        e.text($.datepicker.formatDate("yy", new Date));
                        break;
                    default:
                        e.text($.datepicker.formatDate("mm/dd/yy",
                            new Date))
                }
                $.data(e[0], "rosv", "1")
            }
            c.ro && 7 !== c.ftp && (e.attr("disabled", "disabled"), fill.readonly.push(e.attr("id")));
            e.focus(function() {
                selectMe($(this))
            });
            fill.toShow.push(e)
        }
    };
    getMonthName = function() {
        return "January February March April May June July August September October November December".split(" ")[(new Date).getMonth()]
    };
    signDocument = function(a) {
        0 < a && $("[id$=" + a + "]").css("cursor", "wait");
        setTimeout(function() {
            save(1, 1, a)
        }, 10)
    };
    initialDocument = function(a, b) {
        setTimeout(function() {
                save(2, 1, b)
            },
            10)
    };
    doInitial = function(a, b) {
        "" != $.trim(a.ii) ? (spanel.inm = a.ii, initialMe(b)) : isMobile() ? window.location = "mobilesignpad.aspx?nosign=4&fldid=" + b + "&b=" + encodeURIComponent(a.url) + "&d=0&f=" + fill.request.sf : ($("body").append('<div id="divInitPanel" style="display:none"><div id="ackPanel" ><div style="margin-top:10px;margin-bottom:10px;font-size:12px;font-weight:bold">Create Initial</div><div id="divInArea" tabindex="0" class="ui-corner-all " tabindex="1" style="font-size:35px;text-align:center;width:97%;height:60px;padding-left:5px;padding-top:20px;margin-bottom:10px;border:thin solid gray;"></div></div><div id="btnICancel" class="ibutton" style="font-weight:bold;font-size:11px">Cancel</div><div id="btnInitial" class="ibutton" style="float:right;color:white;font-weight:bold;font-size:11px">Accept</div></div>'),
            $("#divInitPanel").dialog({
                height: 200,
                width: 300,
                modal: !0,
                closeOnEscape: !1,
                resizable: !1,
                draggable: !0,
                open: function() {
                    $("#divInArea").addClass("f" + fill.request.sf);
                    $("#btnInitial").button({
                        icons: {
                            primary: "ui-icon-check"
                        }
                    }).click(function() {
                        initialMe(b)
                    });
                    $("#btnICancel").button({
                        icons: {
                            primary: "ui-icon-close"
                        }
                    }).click(function() {
                        $("#divInitPanel").dialog("destroy").remove()
                    });
                    $("#btnInitial").removeClass("ui-corner-all");
                    $("#btnICancel").removeClass("ui-corner-all");
                    $("#divInArea").text(spanel.inm);
                    $("#divInArea").html($("#divInArea").html() + spanel.carret).focus();
                    $("#divInArea").keyup(function(a) {
                        a.preventDefault();
                        13 == a.keyCode || 10 == a.keyCode ? $("#btnInitial").click() : (46 == a.keyCode || 8 == a.keyCode ? 0 < spanel.inm.length && (spanel.inm = spanel.inm.substring(0, spanel.inm.length - 1)) : 4 > spanel.inm.length && 32 != a.which && (spanel.inm += String.fromCharCode(a.which)), $("#divInArea").text(spanel.inm), $("#divInArea").html($("#divInArea").html() + spanel.carret).focus(), function w() {
                            $(".blink_me").fadeOut(500).fadeIn(500,
                                w)
                        }())
                    });
                    (function v() {
                        $(".blink_me").fadeOut(500).fadeIn(500, v)
                    })()
                },
                position: {
                    my: "center top",
                    at: "center top+100",
                    of: "#divprnt"
                }
            }), $(".ui-dialog-titlebar").hide(), $(".ui-dialog-titlebar-close").hide(), $(".ui-button-text").css({
                "font-weight": "bold"
            }), $(window).resize(function() {
                $("#divSignPanel").dialog("option", "position", {
                    my: "center top",
                    at: "top+100",
                    of: "#divprnt"
                })
            }))
    };
    initialMe = function(a) {
        if ("" != $.trim(spanel.inm)) return $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "init",
                str: spanel.inm,
                fid: a,
                rid: fill.url,
                doc: $("#ddlDoc").val(),
                pg: $("#ddlPage").val(),
                tm: (new Date).getTime()
            },
            type: "POST",
            dataType: "json",
            async: !1,
            beforeSend: function() {
                $(".ibutton").button("option", "disabled", !0)
            },
            success: function(b) {
                b.status && "ok" != b.status ? alert("Failed.  Please reload the document and try again.") : (fill.request.complete = b.complete, showCompleteDialog(), $("#divInitPanel").dialog("destroy").remove(), $("#cc" + a).css({
                    "background-color": "",
                    border: "none"
                }).removeClass("ui-corners-all").unbind("click").unbind("hover").html('<div style="width:100%;height:100%;overflow:hidden" class="f' +
                    fill.request.sf + '">' + spanel.inm + "</div>"), b = $(".selected"), b.removeClass("selected"), b.addClass("signed"), b.css("background-color", fill.nonreqc), fill.selectNextControl(2))
            },
            complete: function() {
                $(".ibutton").button("option", "disabled", !1)
            }
        }), res
    };
    generateDocMap = function() {
        var a = fill.request.map;
        fill.req = 0;
        fill.sgn = 0;
        fill.treq = 0;
        fill.tsgn = 0;
        $("#pnlMap").html("");
        fill.request.skp ? $(".skipb1").show().prop("checked", fill.request.skpf) : $(".skipb1").hide();
        for (var b = 0, c = 0, e = 0, f = 0; f < a.length; f++) {
            b += fill.request.map[f].Pages.length;
            for (var h = 0; h < a[f].Pages.length; h++) e++, a[f].Pages[h].CurrentFl ? (fill.cp = a[f].Pages[h], fill.d = a[f].Doc, fill.cpi = h, c = e, fill.csgn = a[f].Pages[h].SignCount, fill.ctsgn = a[f].Pages[h].TotalSignCount) : (fill.req += a[f].Pages[h].RequiredFields, fill.sgn += a[f].Pages[h].SignCount), fill.treq += a[f].Pages[h].TotalRequiredFields, fill.tsgn += a[f].Pages[h].TotalSignCount
        }
        $("#lbCPage").text(c);
        $("#lbTPage").text(b);
        $("#docmap").show()
    };
    validate = function() {
        b = !0;
        $("[id*=cc_]").each(function() {
            "function" == typeof $(this).blur &&
                $(this).blur()
        });
        b = !1
    };
    getFieldValue = function(a) {
        var b = "",
            c = $(a);
        if ("" == $.data(a, "vv") || c.val() != $.data(a, "vv"))
            if (c.is(":checkbox") || c.is(":radio")) b = c.is(":checked") ? "1" : "0";
            else if (b = c.val(), "" == b || $.trim(b) == c.attr("pmt")) b = " ";
        return b
    };
    showWait = function() {
        if (0 >= $("#divWait").length) {
            var a = $("#hdr").width() + $("#hdr").offset().left;
            $("body").append('<div id="divWait" style="width:' + a + 'px;height:100%;position:absolute;left:0;top:0;opacity:0.6;background-color:white;z-index:999999;"></div>');
            $("#divWait").append(h.el)
        }
        $("#divWait").show()
    };
    gotopage = function(a) {
        var b = a.split("_");
        fill.d = b[0];
        $("#warnDlg").remove();
        m = p = null;
        save(!1, !1, 0, "p_" + a)
    };
    save = function(a, b, c, e, f, h) {
        if (fill.hasOwnProperty("request")) {
            validate();
            var g = [],
                k;
            $("[id*=cc_]").each(function() {
                var a = $.data($(this)[0], "rosv"),
                    b = $(this).attr("v");
                k = "";
                if ($(this).is(":checkbox") || $(this).is(":radio")) k = $(this).is(":checked") ? "1" : "0";
                else if (k = "" != $.trim($(this).val()) ? $(this).val() : 0 < $(this).find("option").length ? "" : $(this).text(), "1" === a && "" === k && (k = $(this).text()), "" ===
                    k || $.trim(k) === $(this).attr("pmt")) k = " ";
                "1" === $(this).attr("external") && (k += "|||" + $(this).find("option:selected").text());
                if ("1" === a || $(this).is(":enabled") || b !== k) $(this).is("img") && "1" !== a || g.push($(this).attr("id") + "=" + k + ($(this).is(":visible") ? "" : "|v|"))
            });
            var l = !0;
            "undefined" == typeof a && (l = !1);
            var m = 3 === h ? 2 : 2 === h ? 1 : 0;
            4 === h && (m = 4);
            $.ajax({
                url: "controls/FillH.ashx",
                beforeSend: function() {
                    showWait()
                },
                data: {
                    action: "save",
                    rid: fill.url,
                    data: g.join(";"),
                    cdoc: fill.request.cdoc,
                    doc: $("#ddlDoc").val(),
                    pg: fill.request.pg,
                    np: e,
                    sgn: $("#ddlSignees").val(),
                    signing: a ? 1 : 0,
                    c: fill.request.c,
                    check: b && 2 !== b ? 1 : 0,
                    fldid: c,
                    cmp: f ? 1 : 0,
                    skpf: m,
                    tm: (new Date).getTime()
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                type: "POST",
                async: l,
                success: function(f) {
                    $("#divWait").hide();
                    if (4 === h) f.status && "failed" === f.status ? alert("Failed to send request.  Please contact request.") : ($(window).unbind("beforeunload"), window.location.href = "/Library.aspx");
                    else if (f.status && "failed" === f.status) {
                        $("#divWait").hide();
                        f = f.msg.split(";");
                        for (var g = "", k = !1, l = 0; l < f.length; l++) {
                            var m = f[l].split("=");
                            if (2 === m.length) {
                                for (var q = m[1].split(","), p = "", n = q[0], r = 1; r < q.length; r++) "" !== p && (p += ","), 0 < q[r].indexOf("*") ? p += q[r].replace("*", "(you are here)") : (p += "<a href=\"javascript:gotopage('$$url')\">$$pg</a>".replace(/\$\$pg/, q[r]).replace(/\$\$url/, n + "_" + (parseInt(q[r]) - 1)), k = !0);
                                g += "<tr><td>$$doc</td><td>$$pages</td></tr>".replace(/\$\$doc/, m[0]).replace(/\$\$pages/, p)
                            }
                        }
                        g = '<span style="font-size:12px">You first <strong>MUST</strong> complete the following pages as required fields present on those pages</span>' +
                            ('<table style="width:100%;margin-top:15px;font-size:12px"><thead><tr><th  style="width:200px;text-align:left">Document</th><th style="text-align:left">Pages</th></tr>' + g + "</table>");
                        k && (g += '<div style="margin-top:15px">Click on a page in the table above to navigate to it.</div>');
                        Common.obj.showWarningNew('<div style="width:100%;text-align:left">' + (g + '<div style="margin-top:15px;"><strong>Tip</strong>: Document Map on the left shows you number of required fields and signatures on each page of the package.  You can also use it to navigate through the package.</div><div style="margin-top:15px;font-size:12px"><a href="javascript:showGuide()" style="color:red">View 2 min guide "Signing YouSignHere document"</a></div>') +
                            "</div>", 350 + 20 * f.length, 500, "Attention! You cannot sign because:", "#divprnt")
                    } else a ? ($("#divWait").hide(), a && -1 === c ? 2 > fill.request.sclick ? askConfirm(f, -1) : Common.obj.showConfirmNew('<div style="width:100%;text-align:left"><strong>You will not be able to modify a "completed" document.</strong><br/>  Once complete, document will become read-only<br /><br /> Would you like to continue?</div>', 300, 400, "Complete", "Cancel", "#divprnt", completeDoc) : 1 === a ? doSign(f, c) : 2 === a && doInitial(f, c)) : 2 === b ? ($("#divWait").hide(),
                        $("#divDownload").attr("src", "controls/FillH.ashx?action=download&rid=" + encodeURIComponent(fill.url) + "&tm=" + (new Date).getTime())) : ("1" !== $("#lbTPage").text() && (e && $("#docarea").parent().scrollTop(0), f.msg && 2 === f.sclick && "" === showInfo(3) || populate(f)), $("#divWait").hide(), f.msg && 2 === f.sclick && "" === showInfo(3) && ($("#divWait").hide(), Common.obj.showConfirmNew('<div style="width:100%;text-align:left"><strong>You will not be able to modify a "completed" document.</strong><br/>  Once complete, document will become read-only<br /><br /> Would you like to continue?</div>',
                        300, 400, "Complete", "Cancel", "#divprnt", completeDoc)))
                },
                error: function() {
                    $("#divWait").hide()
                }
            })
        }
    };
    doSign = function(a, b, c) {
        $(a).find("signcount").text();
        isMobile() ? (fill.signing = !0, window.location = "mobilesignpad.aspx?nosign=" + a.stype + "&fldid=" + b + "&b=" + encodeURIComponent(a.url) + "&d=" + (c ? 1 : 0)) : ($("#divWait").hide(), setTimeout(function() {
            spanel.param = b;
            spanel.stype = a.stype;
            spanel.sorder = a.sorder;
            spanel.ds = a.ds;
            spanel.url = url;
            spanel.doc = $("#ddlDoc").val();
            spanel.pg = $("#ddlPage").val();
            fill.request.il &&
                (spanel.sgn = $("#ddlSignees").val());
            spanel.init(700, 460, "#divprnt", signCallback)
        }, 1))
    };
    resizeWindow = function() {
        $("#divWind").height($(window).height() - $("#hdr").height() - 52 + "px")
    };
    askConfirm = function(a, b) {
        $("#divWait").hide();
        isMobile() ? doSign(a, b, 1) : ($("#divWait").hide(), ackDisclaimerNew('By clicking this button, I am authorizing YSH to automatically populate the "signature" fields in this document with my signature.  I understand that I may sign each of the above fields, but I still am selecting this automatic population option knowingly and voluntarily.  YSH makes no representations or guarantees about the content of the documents being electronically initialed or signed using YSH -- it provides users only with the technological ability to electronically initial and/or sign documents as they see fit, at their discretion.  I hereby agree to hold harmless and indemnify YSH in the event there are any legal claims, including any litigation, involving in any manner my electronic initial(s) and/or signature(s) on this document.',
            550, 400,
            function(c) {
                c ? doSign(a, b) : showCompleteButton()
            }, "#divprnt"))
    };
    signCallback = function(a) {
        populate(a)
    };
    completeDoc = function() {
        $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "savec",
                rid: fill.url,
                tm: (new Date).getTime()
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: "POST",
            async: !1,
            success: function(a) {
                a.status && "failed" == a.status ? Common.obj.showWarningNew('<div style="width:100%;text-align:left">' + a.msg + "</div>", 300, 400, "Error", "#divprnt") : populate(a)
            }
        })
    };
    cancelRequest = function() {
        $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "cancelreq",
                rid: fill.url,
                tm: (new Date).getTime()
            },
            dataType: "json",
            async: !0,
            contentType: "application/json; charset=utf-8",
            success: function(a) {
                $(window).unbind("beforeunload");
                window.location.href = "/Library.aspx"
            },
            error: function(a, b, c) {
                window.location = "/SystemMessage.aspx?t=0&msg=Failed to send request. Please contact support."
            }
        })
    }
}
$(document).bind("dragstart", function() {
    return !1
});
var fill = new Fill;
$(function() {
    fill.init();
    fill.reqc = "rgb(255, 132, 153)";
    fill.nonreqc = "rgb(251, 251, 251)";
    fill.reqbord = "2px solid black";
    $(document).on("keydown", function(b) {
        if ($("#divCode").is(":visible")) 13 === b.keyCode && $("#btnCodeOk").click();
        else {
            var a = $(b.target).attr("id");
            "undefined" != typeof a && 0 <= a.indexOf("cc_") || 8 == b.keyCode && b.preventDefault()
        }
    })
});

function FieldValidation() {
    validateField = function(b, a, c, g, e, h) {
        a = new RegExp(a);
        val = $(b.target).val();
        if ("" === val) {
            var f = h ? "Black" : "Gray";
            g && (Common.obj.showWarningNew("This field may not contain an empty value", 300, 400, "Error", "#divprnt"), $(b.target).focus());
            $(b.target).css("color", f);
            $(b.target).val("")
        } else if (!a.test(val)) $(b.target).css("color", f), $(b.target).val("");
        else if (null !== e && "undefined" !== typeof e && (h = e.split(","), 2 == h.length)) {
            e = h[0];
            g = h[1];
            f = new RegExp(h[1], "g");
            h = $(b.target).val().replace(f,
                "");
            e = e.split(f);
            f = "";
            for (a = 0; a < e.length; a++)
                for (0 < f.length && (f += g), c = 0; c < e[a].length; c++) {
                    var k = h.substring(0, 1);
                    if ("" === k) break;
                    var l = e[a].substring(c, c + 1);
                    "#" !== l ? (f += l, k === l && (h = h.substring(1))) : (f += h.substring(0, 1), h = h.substring(1))
                }
            $(b.target).val(f)
        }
    };
    hidePrompt = function(b, a) {
        val = $(b.target).val();
        $(b.target).css("color", "Black")
    };
    this.initValidator = function(b, a, c, g, e, h) {
        cc = h ? "Black" : "Gray";
        "" != $(b).val() && $(b).val() != a || "" == a || $(b).css("color", cc);
        $.data($(b)[0], "vv", a);
        $(b).blur(function(b) {
            validateField(b,
                c, a, g, e, h)
        }).blur();
        $(b).focus(function(b) {
            hidePrompt(b, a)
        })
    };
    checkComplete = function(b) {
        d = function() {
            1 === b ? fill.request.ext ? window.location = fill.request.ext : fill.request.slf || fill.request.il ? fill.request.mob && isMobile() ? window.location = "defaultm.aspx" : window.location = "requests.aspx" : window.location = "index.html" : fill.request.mob && isMobile() ? window.location = "Defaultm.aspx" : window.location = "Requests.aspx"
        };
        if (fill && fill.request && !fill.signing) {
            var a = showInfo(3);
            fill.prompted = !0;
            "" !== a ? Common.obj.showConfirmNew('<div style="text-align:left">' +
                a + "<br/><br/>Do you want to quit?</div>", 300, 350, "Yes", "No", "#divprnt",
                function() {
                    showWait();
                    d()
                }) : d()
        }
    }
}
null == FieldValidation.obj && (FieldValidation.obj = new FieldValidation);
$(window).bind("beforeunload", function(b) {
    if (!isMobile() && !fill.prompted && fill && fill.request && !fill.signing && !fill.request.complete && 0 < fill.request.map.length) {
        if (/chrom(e|ium)/.test(navigator.userAgent.toLowerCase())) return confirm("You did not complete the package. There are more pages to complete. Are you sure you want to quit?");
        alert("You did not complete the package. There are more pages to work on. \n\nPlease come back and complete this request later.  It will be available to you until it expires or complete.")
    }
});

function GroupedControls() {
    GroupedControls.prototype.init = function(a) {
        this.req = !1;
        this.fields = [];
        for (var b = 0; b < a.length; b++) {
            var g = a[b];
            g[1] && (req = !0);
            this.fields.push(g[0].replace("#", ""))
        }
        var e = this;
        for (b = 0; b < a.length; b++) g = a[b], g = $(g[0]), 0 != g.length && (g.is(":checkbox") ? g.unbind("change").change(function(a) {
            e.checkOne(a, e)
        }).change() : g.unbind("blur").blur(function(a) {
            e.checkOne(a, e)
        }).blur())
    };
    GroupedControls.prototype.getState = function() {
        for (var a = this.fields, b = !1, g = 0; g < a.length; g++) {
            var e = $("#" +
                a[g]);
            if (e.is(":checkbox") && e.is(":checked") || !e.is(":checkbox") && "" != e.val()) {
                b = !0;
                break
            }
        }
        return b
    };
    var b = !1;
    GroupedControls.prototype.checkOne = function(a, c) {
        c = c.fields;
        var g = "checkbox" == $(a.target).attr("type") ? $(a.target).is(":checked") : "" != $.trim($(a.target).val()),
            e = !1;
        if (!b) {
            b = !0;
            if (g)
                for (var h = 0; h < c.length; h++) {
                    var f = $("#" + c[h]);
                    c[h] != $(a.target).attr("id") && (f.is(":checkbox") ? (f.prop("checked", !g), f.change()) : (f.val(""), f.blur()))
                } else
                    for (e = !1, h = 0; h < c.length; h++)
                        if (f = $("#" + c[h]), "1" == $.data(f[0],
                                "req") && (e = !0), f.is(":checkbox") && f.is(":checked") || !f.is(":checkbox") && "" != $.trim(f.val())) {
                            g = !0;
                            break
                        } for (h = 0; h < c.length; h++) setReqState($("#" + c[h]), e && !g);
            b = !1
        }
    }
}

function TaggedControls() {
    TaggedControls.prototype.init = function(a) {
        this.fields = [];
        for (var b = 0; b < a.length; b++) this.fields.push(a[b]);
        var g = this;
        for (b = 0; b < a.length; b++) {
            var e = $(a[b]);
            0 != e.length && (e.is(":checkbox") ? e.click(function(a) {
                g.setValues(a, g)
            }) : e.change(function(a) {
                g.setValues(a, g)
            }))
        }
    };
    var b = !1;
    TaggedControls.prototype.setValues = function(a, c) {
        if (!b) {
            var g = "#" + $(a.target).attr("id");
            a = $(a.target).is(":checkbox") ? $(a.target).is(":checked") : $(a.target).val();
            try {
                b = !0;
                for (var e = 0; e < c.fields.length; e++) c.fields[e] !=
                    g && ($(c.fields[e]).is(":checkbox") ? $(c.fields[e]).prop("checked", a).change() : $(c.fields[e]).val(a).blur())
            } catch (h) {} finally {
                b = !1
            }
        }
    }
}
behaviorList = function(b, a, c, g) {
    a = a.behaviourlist.behaviour ? a.behaviourlist.behaviour : a.behaviourlist.vbh;
    switch (parseInt(a.type)) {
        case 1:
            this.b = new stateBehavior(b, a, c);
            break;
        case 2:
            g && onSignBehaviorPreview(b, a);
            break;
        case 3:
            this.b = new valueStateBehavior(b, a);
            break;
        case 4:
            this.b = new valueExternalBehavior(b, a)
    }
};

function onSignBehaviorPreview(b, a) {
    setTimeout(function() {
        $("#cc" + a.t).attr("disabled", "disabled")
    }, 2E3);
    $("#cc" + b.selector.replace("ContentPlaceHolder1_", "")).click(function() {
        $("#cc" + a.t).val($.datepicker.formatDate("mm/dd/yy", new Date))
    })
}
var evttree = [];

function checkTree(b) {
    var a = new Date;
    if (0 < evttree.length && 1 < (a - evttree[0].tm) / 1E3) return evttree = [], !0;
    for (var c = 0, g = 0; g < evttree.length; g++)
        if (evttree[g].c == b && c++, 2 < c) return !1;
    c = {};
    c.tm = a;
    c.c = b;
    evttree.push(c);
    return !0
}
stateBehavior = function(b, a, c) {
    this.me = b;
    this.notgroup = 1 == parseInt(a.g);
    this.rule = parseInt(a.rule);
    this.targets = Array.isArray(a.targets.t) ? a.targets.t : [a.targets.t];
    this.group = c;
    try {
        for (a = 0; a < this.targets.length; a++) {
            var g = $("#cc" + this.targets[a]),
                e = $.data(g[0], "pp"),
                h = (void 0 !== e ? e + "|" : "") + $(b).attr("id");
            $.data(g[0], "pp", h)
        }
    } catch (k) {}
    stateBehavior.prototype.onchange = function(a, b) {
        if (checkTree($(a.target).attr("id"))) {
            a = $(a.target).is(":checkbox") ? $(a.target).is(":checked") : "" != $.trim($(a.target).val());
            !b.notgroup && b.group && (a = b.group.handler.getState());
            var c = 3 == b.rule || 4 == b.rule,
                e = a;
            if (2 == b.rule || 4 == b.rule) e = !a;
            for (var f = 0; f < b.targets.length; f++) {
                var h = !1,
                    g = !1,
                    k = $("#cc" + b.targets[f]);
                try {
                    var l = $.data(k[0], "pp");
                    if (0 < l.indexOf("|")) {
                        for (var z = l.split("|"), v = 0; v < z.length; v++) {
                            var w = "#cc" + z[v];
                            a |= $(w).is(":checkbox") ? $(w).is(":checked") : "" != $.trim($(w).val())
                        }
                        e = a;
                        if (2 == b.rule || 4 == b.rule) e = !a
                    }
                } catch (n) {}
                if (0 != k.length) {
                    "1" == $.data(k[0], "req") && e && ("" == k.val() || 0 <= k.val().indexOf("#")) && (g = h = !0);
                    v =
                        k.is(":checkbox");
                    var B = k.is("select");
                    if (e) 0 > fill.readonly.indexOf("cc" + b.targets[f]) && !fill.readOnly && k.removeAttr("disabled"), k.is(":disabled") && (g = h = !1), c && k.show(), k.is("div") && k.show();
                    else if (k.is("span") || (k.val(""), k.attr("disabled", "disabled"), v ? k.removeAttr("checked") : k.val(""), g = h = !1, k.toggleClass("rctrl", g)), c)
                        for (k.hide(), g = 0; g < fill.toShow.length; g++) {
                            if (fill.toShow[g].attr("id") == k.attr("id")) {
                                fill.toShow.splice(g, 1);
                                break
                            }
                        } else g = h = !1;
                    k.is("div") || setReqState(k, h, e);
                    v || B ? k.change() :
                        k.blur()
                }
            }
            setTimeout(function() {
                fill.countRequired()
            }, 100)
        }
    };
    var f = this;
    if (1 != b.ftp) $("#cc" + b.id).change(function(a) {
        f.onchange(a, f)
    }).change();
    else {
        if (!f.notgroup && c && 0 < c.length)
            for (a = 0; a < c.length; a++) $(c[a][0]).blur(function(a) {
                f.onchange(a, f)
            });
        else $("#cc" + b.id).blur(function(a) {
            f.onchange(a, f)
        });
        $("#cc" + b.id).blur()
    }
};
valueStateBehavior = function(b, a) {
    this.b = a;
    valueStateBehavior.prototype.clearDependents = function(a) {
        if (a && a.t && !(0 >= a.t.length))
            for (var b = 0; b < a.t.length; b++) $tgt = $.isArray(a.t) ? $("#cc" + a.t[b]) : $("#cc" + a.t), $tgt.is("span") ? $tgt.text("") : $tgt.val("")
    };
    valueStateBehavior.prototype.applyValueChangeBehavior = function(a, b, c) {
        if (b && b.t && !(0 >= b.t.length))
            for (a = 0; a < b.t.length; a++)
                if ($.isArray(b.t)) $tgt = $("#cc" + b.t[a]), $tgt.is("span") ? $tgt.text(c) : $tgt.val(c);
                else {
                    $tgt = $("#cc" + b.t);
                    $tgt.is("span") ? $tgt.text(c) :
                        $tgt.val(c);
                    break
                }
    };
    valueStateBehavior.prototype.applySelBehavior = function(a, b) {
        if (b.targets) {
            a = Array.isArray(b.targets.t) ? b.targets.t : [b.targets.t];
            for (var c = 0; c < a.length; c++) {
                $tgt = $("#cc" + a[c]);
                var e = $tgt.is(":checkbox"),
                    g = $tgt.is("select"),
                    l = "1" == $.data($tgt[0], "req") && (e && !$tgt.is(":checked") || !e && "" == $.trim($tgt.val())),
                    m = !1;
                switch (parseInt(b.rule)) {
                    case 1:
                        fill.readOnly || ($tgt.removeAttr("disabled").blur(), m = !0);
                        break;
                    case 2:
                        $tgt.attr("disabled", "disabled");
                        e ? $tgt.removeAttr("checked") : $tgt.val("");
                        m = !1;
                        break;
                    case 3:
                        m = !0;
                        $tgt.show();
                        break;
                    case 4:
                        e && $tgt.removeAttr("checked");
                        $tgt.hide();
                        for (var p = 0; p < fill.toShow.length; p++)
                            if (fill.toShow[p].attr("id") == $tgt.attr("id")) {
                                fill.toShow.splice(p, 1);
                                break
                            }
                }
                setReqState($tgt, l & m);
                e | g ? $tgt.change() : $tgt.blur()
            }
            fill.countRequired()
        }
    };
    valueStateBehavior.prototype.applyNotSelBehavior = function(a, b) {
        if (b.targets) {
            a = Array.isArray(b.targets.t) ? b.targets.t : [b.targets.t];
            for (var c = 0; c < a.length; c++) {
                $tgt = $("#cc" + a[c]);
                var e = $tgt.is(":checkbox"),
                    g = $tgt.is("select");
                if ($tgt && !(1 > $tgt.length)) {
                    var l = "1" == $.data($tgt[0], "req");
                    switch (parseInt(b.rule)) {
                        case 1:
                            $tgt.attr("disabled", "disabled");
                            e ? $tgt.removeAttr("checked") : $tgt.val("");
                            l && setReqState($tgt, !1);
                            break;
                        case 2:
                            fill.readOnly || $tgt.removeAttr("disabled").blur();
                            break;
                        case 3:
                            e && $tgt.removeAttr("checked");
                            $tgt.hide();
                            for (l = 0; l < fill.toShow.length; l++)
                                if (fill.toShow[l].attr("id") == $tgt.attr("id")) {
                                    fill.toShow.splice(l, 1);
                                    break
                                } break;
                        case 4:
                            $tgt.show()
                    }
                    e | g ? $tgt.change() : $tgt.blur()
                }
            }
            fill.countRequired()
        }
    };
    var c =
        this;
    $("#cc" + b.id).change(function(a) {
        if (checkTree($(a.target).attr("id")))
            if (a = $(a.target).val(), "" == $.trim(a) && (a = "[Empty]"), "6" === c.b.rule && c.clearDependents(c.b.dep), c.b.state.length)
                for (var b = 0; b < c.b.state.length; b++) a == c.b.state[b].val ? "6" !== c.b.rule ? c.applySelBehavior(c, c.b.state[b].behaviour) : c.applyValueChangeBehavior(c, c.b.dep, c.b.state[b].behaviour.targets.t) : "6" !== c.b.rule && c.applyNotSelBehavior(c, c.b.state[b].behaviour);
            else c.b.state && (a == c.b.state.val ? c.applySelBehavior(c, c.b.state.behaviour) :
                c.applyNotSelBehavior(c, c.b.state.behaviour))
    }).change()
};
valueExternalBehavior = function(b, a) {
    this.b = a;
    var c = {},
        g = !1;
    createFieldsLinkTable = function(a) {
        c = {};
        for (var b = 0; b < a.length; b++) {
            var e = a[b];
            if ("" != $.trim(e.bv)) {
                var g = JSON.parse(e.bv.replace(/@/g, ""));
                g = g.behaviourlist.behaviour ? g.behaviourlist.behaviour : g.behaviourlist.vbh;
                if ("4" == g.type && "behaviour" in g.state && "targets" in g.state.behaviour) {
                    g = g.state.behaviour.targets.t.split(";");
                    for (var l = 0; l < g.length; l++) {
                        var m = {};
                        g[l] in c && (m = c[g[l]]);
                        e.id in m || (m[e.id] = !0);
                        c[g[l]] = m
                    }
                }
            }
        }
    };
    initExternalFieldHandlers =
        function() {
            for (var a = Object.keys(c), b = 0; b < a.length; b++) {
                var f = $("#cc" + a[b]);
                0 != f.length && f.change(changeTarget)
            }
        };
    initExternalAttributes = function(a) {
        for (var b = 0; b < a.length; b++) {
            var c = a[b];
            if ("" != $.trim(c.bv)) {
                var e = JSON.parse(c.bv.replace(/@/g, ""));
                "4" == (e.behaviourlist.behaviour ? e.behaviourlist.behaviour : e.behaviourlist.vbh).type && (c = $("#cc" + c.id), 0 != c.length && c.attr("external", "1"))
            }
        }
    };
    fillExternalInitValues = function(a) {
        g = !0;
        for (var b = 0;;) {
            for (var c = !1, e = 0; e < a.length; e++) {
                var l = a[e],
                    m = $("#cc" + l.id);
                if (0 != m.length) {
                    var p = l.val.split("|||")[0];
                    0 < l.fldnm.length && "null" != p && (m.val() != p || 0 == b) && (c = !0, m.val(p).change())
                }
            }
            b++;
            if (!c || 10 <= b) break
        }
        g = !1
    };
    checkExternalInitValues = function(a) {
        for (var b = 0; b < a.length; b++)
            if (!a[b].iext) return;
        createFieldsLinkTable(fill.request.flds);
        initExternalFieldHandlers();
        initExternalAttributes(fill.request.flds);
        fillExternalInitValues(a)
    };
    findRequestFieldById = function(a) {
        for (var b = 0; b < fill.request.flds.length; b++)
            if (fill.request.flds[b].id == a) return fill.request.flds[b];
        return null
    };
    loadExternalData = function(a, b, c, g, l) {
        res = [];
        apiurl = fill.request.exturl;
        if (0 == apiurl.length) return res;
        "/" != apiurl.slice(-1) && (apiurl += "/");
        apim = fill.request.extm;
        if (0 == apim.length) return res;
        var e = [];
        e.push({
            key: "tagGroup",
            value: b.dcnm
        });
        e.push({
            key: "tagName",
            value: b.fldnm
        });
        if ("behaviour" in a.state && "targets" in a.state.behaviour) {
            a = a.state.behaviour.targets.t.split(";");
            for (var f = 0; f < a.length; f++) {
                var h = $("#cc" + a[f]);
                if (0 != h.length) {
                    var k = findRequestFieldById(a[f]);
                    k && (e.push({
                        key: "p_0",
                        value: k.fldnm
                    }), e.push({
                        key: "v_0",
                        value: h.val()
                    }))
                }
            }
        }
        $.ajax({
            url: apiurl + "api/IntegratedSystems/YSH/taglist/" + apim,
            data: JSON.stringify(e),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            headers: {
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Methods": "GET, POST, PATCH, PUT, DELETE, OPTIONS",
                "Access-Control-Allow-Headers": "Origin, Content-Type, X-Auth-Token",
                "Content-Type": "application/json"
            },
            async: l,
            success: function(a) {
                if (a && 0 < a.count) {
                    c.options.add(new Option("", -1));
                    for (var e = 0; e <
                        a.count; e++) c.options.add(new Option(a.rows[e].Value, a.rows[e].ID));
                    b.iext || $(c).val(b.val);
                    null != b.ival && ($(c).val(b.ival), b.ival = null)
                }
                b.iext = !0;
                g && checkExternalInitValues(fill.request.flds)
            },
            error: function() {
                b.iext = !0;
                g && checkExternalInitValues(fill.request.flds)
            }
        });
        return res
    };
    checkExternal = function(a, b, c, g) {
        for (var e = a.options.length - 1; 0 <= e; e--) a.options.remove(e);
        e = JSON.parse(b.bv.replace(/@/g, ""));
        edt = loadExternalData(e.behaviourlist.behaviour ? e.behaviourlist.behaviour : e.behaviourlist.vbh,
            b, a, c, g)
    };
    changeTarget = function(a) {
        a = $(a.target).attr("id").slice(2);
        if (a = c[a]) {
            a = Object.keys(a);
            for (var b = 0; b < a.length; b++) {
                var e = $("#cc" + a[b]);
                if (0 != e.length) {
                    var k = findRequestFieldById(a[b]);
                    k && (g && (k.ival = k.val.split("|||")[0]), checkExternal(e[0], k, !1, !0))
                }
            }
        }
    };
    b.iext = !1;
    checkExternal($("#cc" + b.id)[0], b, !0, !0)
};
setReqState = function(b, a) {
    a && !b.is(":disabled") ? b.is(":checkbox") ? b.css({
        background: fill.reqc,
        "outline-color": fill.reqc,
        "outline-width": "2px",
        "outline-style": "solid"
    }).addClass("rctrl") : b.css({
        background: fill.reqc,
        border: fill.reqbord
    }).addClass("rctrl") : b.is(":checkbox") ? b.css({
        background: fill.nonreqc,
        "outline-color": fill.nonreqc,
        "outline-width": "0",
        "outline-style": "solid"
    }).removeClass("rctrl") : b.css({
        background: fill.nonreqc,
        border: "1px solid #C0C0C0"
    }).removeClass("rctrl")
};

function Help() {
    var b;
    this.init = function(a) {
        b = a;
        var c = -1;
        $("#divHelp").remove();
        $("body").append($("<div>", {
            id: "divHelp",
            style: "display:none;"
        }));
        $("#divHelp").append($("<div>", {
            id: "bb",
            style: "width:99%;height:9px;overflow:hide"
        }));
        $("#bb").append($("<div>", {
            id: "top"
        }));
        $("#divHelp").append($("<div>", {
            id: "left"
        }));
        $("#divHelp").append($("<div>", {
            id: "msg",
            style: "height:70%;"
        }));
        $("#divHelp").append($("<div>", {
            id: "divControl",
            style: "height:30px;width:90%;position:absolute;bottom:20px;text-align:right;border-top:thin solid lightgrey"
        }));
        $("#divControl").append($("<span>", {
            id: "btnHClose",
            text: "Close",
            style: "margin:5px 0 0 5px"
        }));
        $("#divControl").append($("<span>", {
            id: "btnHPrev",
            text: "Prev ",
            style: "margin:5px 0 0 5px"
        }));
        $("#divControl").append($("<span>", {
            id: "btnHNext",
            text: "Next ",
            style: "margin:5px 0 0 5px"
        }));
        $("#divHelp").append($("<div>", {
            id: "tt",
            style: "width:95%;height:15px;overflow:hide;position:absolute;bottom:1px;"
        }));
        $("#tt").append($("<div>", {
            id: "bottom"
        }));
        $("#divHelp").append($("<div>", {
            id: "right"
        }));
        $("#btnHClose").button().click(function() {
            $("#divHelp").dialog("destroy")
        });
        $("#btnHPrev").button().click(function() {
            c--;
            0 > c && (c = b.length - 1);
            c = showNextStep(c, -1)
        });
        $("#btnHNext").button().click(function() {
            c++;
            c >= b.length && (c = 0);
            c = showNextStep(c, 1)
        });
        $("#divHelp").dialog({
            modal: !0,
            open: function() {
                $("#btnHNext").click()
            }
        });
        $(".ui-dialog-titlebar").hide();
        $(".ui-dialog").css("background-color", "lightblue");
        $(".ui-resizable-handle").css("background-color", "lightblue");
        $(".ui-dialog-titlebar").css("background-color", "lightblue");
        $(".ui-dialog-content").css("background-color",
            "lightblue");
        $(".ui-dialog-buttonpane").css("background-color", "lightblue");
        $(".ui-dialog-buttonset").css("background-color", "lightblue");
        $(".right").css("background-color", "lightblue")
    };
    showNextStep = function(a, c) {
        var g = a - 1;
        0 > g && (g = b.length - 1);
        b[g].outaction && b[g].outaction();
        var e = b[a];
        e.inaction && e.inaction();
        g = a;
        for (var h = $(e.pos.of); !h.is(":visible");) {
            a += c;
            a > b.length && (a = 0);
            0 > a && (a = b.length - 1);
            if (g == a) return -1;
            e = b[a];
            h = $(e.pos.of)
        }
        h.position();
        c = h.offset();
        h.parent().width();
        h.parent().height();
        c.top > $(window).height() || 0 > c.top ? $(e.pos.of).scrollintoview({
            complete: function() {
                positionHelp(e, h)
            }
        }) : positionHelp(e, h);
        return a
    };
    positionHelp = function(a, b) {
        var c = b.offset();
        b.parent().width();
        b.parent().height();
        var e = b.width(),
            h = b.height(),
            f = $("#divWind").width(),
            k = $(window).height(),
            l = b = "";
        if ("top" == a.help || "bottom" == a.help)
            if (c.top + a.h + h < k) {
                var m = $("#top");
                $("#top").addClass("arrow top");
                $("#bb").css("border-bottom", "1px solid green");
                $("#tt").css("border-top", "none");
                $("#msg").css("margin",
                    "16px 0px 0px 0px");
                $("#left").removeClass("arrowleft");
                $("#right").removeClass("arrowright");
                $("#bottom").removeClass("arrowbottom");
                if (c.left + e / 2 + a.w < f) {
                    var p = "center-10px bottom+3px";
                    var t = "left top";
                    b = "left";
                    l = "right center"
                } else p = "center+10px bottom+3px", t = "right top", b = "right", l = "left center"
            } else c.top + a.h + h >= k && (m = $("#bottom"), $("#bottom").addClass("arrowbottom"), $("#left").removeClass("arrowleft"), $("#right").removeClass("arrowright"), $("#top").removeClass("arrow"), $("#bb").css("border-bottom",
                "none"), $("#tt").css("border-top", "1px solid green"), $("#msg").css("margin", "0px 0px 0px 20px"), c.left + e / 2 + a.w < f ? (p = "center-10px top-3px", t = "left bottom", b = "left", l = "right center") : (p = "center+10px top-3px", t = "right bottom", b = "right", l = "left center"));
        else c.left + e + a.w < f ? (m = $("#left"), $("#left").addClass("arrowleft"), $("#tt").css("border-top", "none"), $("#bb").css("border-bottom", "none"), $("#tt").css("border-top", "none"), $("#msg").css("margin", "0px 0px 0px 20px"), $("#top").removeClass("arrow"), $("#right").removeClass("arrowright"),
            $("#bottom").removeClass("arrowbottom"), h + c.top + a.h > k ? (p = "right bottom", t = "left bottom", b = "bottom", l = "center top") : (p = "right center", t = "left center", b = "center", l = "top bottom")) : (m = $("#right"), $("#left").removeClass("arrowleft"), $("#top").removeClass("arrow"), $("#bottom").removeClass("arrowbottom"), $("#tt").css("border-top", "none"), $("#bb").css("border-bottom", "none"), $("#msg").css("margin", "0px 20px 0px 0px"), m.addClass("arrowright"), h + c.top + a.h > k ? (p = "left bottom", t = "right bottom", b = "bottom", l = "center top") :
            (p = "left center", t = "right center", b = "center", l = "bottom right"));
        c = {
            my: t,
            at: p,
            of: a.pos.of,
            using: function(a) {
                $(this).animate({
                    left: a.left,
                    top: a.top
                }, "fast")
            }
        };
        $("#msg").html(a.txt);
        m.addClass(b).removeClass(l);
        $("#divHelp").dialog("option", "width", a.w);
        $("#divHelp").dialog("option", "height", a.h);
        $("#divHelp").dialog("option", "position", c)
    }
}
var help = new Help;

function Signing() {
    this.points = [];
    this.draw = !1;
    this.panelPos = this.panel = null;
    this.settings = {
        color: "#000000",
        stroke: 2
    };
    this.settingsblank = {
        color: "#ffffff",
        stroke: 2
    };
    this.paper = null;
    this.prepared = this.myh = this.myw = this.myleft = this.mytop = this.y = this.x = 0;
    this.$spad = this.c = this.ctx = null;
    this.useRaphael = !1;
    this.inm = this.nm = "";
    this.carret = '<span class="blink_me" style="color:gray">_</span>';
    Signing.prototype.init = function(a, c, g, e) {
        this.callback = e;
        "undefined" == typeof a && (a = 700, c = 460);
        this.points = [];
        $("#divSignPanel").remove();
        $("body").append('<div id="divSignPanel" style="display:none"><div id="signPanel" style="display:none"><div id="signPad" class="signPanel"></div><canvas id="signPadM" class="signPanel"></canvas><font id="fDef" style="color:red;display:none">*-Default signature shown.  Use clear to resign.</font></div><div id="ackPanel" style="display:none;"><div style="margin-top:10px;margin-bottom:20px;font-size:12px">Sign by typing your name</div><div id="divTpArea" tabindex="0" class="ui-corner-all " style="font-size:25px;width:97%;height:60px;padding-left:5px;padding-top:20px;margin-bottom:10px;border:thin solid gray;"></div><div id="divBts" style="width:100%;height:30px;"><div style="float:left;width:100px;height:30px"><div id="btnTSign"></div></div><div style="float:right;width:100px;height:30px;text-align:right;"><div id="btnTCancel"></div></div></div></div><div class="ctrlPanel"><div id="btnSigned" class="ui-button-text-only sbutton" style="color:red;font-weight:bold;">Signed</div><div id="btnResetSignature" class="ui-button-text-only sbutton">Clear Signature</div><div id="btnDefSign" class="ui-button-text-only sbutton">Default Signature</div><div id="btnSpClose" class="ui-icon-transferthick-e-w sbutton-right">Close</div><div id="btnSwitch" class="ui-icon-transferthick-e-w sbutton-right"></div></div></div>  ');
        $("#divSignPanel").dialog({
            width: a,
            modal: !0,
            closeOnEscape: !1,
            resizable: !1,
            draggable: !0,
            open: function() {
                $("#divTpArea").addClass("f" + fill.request.sf);
                $("#btnSigned").button().removeClass("ui-corner-all").css("background-color", "lightgreen");
                $("#btnResetSignature").button().removeClass("ui-corner-all");
                $("#btnDefSign").button().removeClass("ui-corner-all");
                2 == spanel.stype ? $("#btnSwitch").button({
                    icons: {
                        secondary: "ui-icon-transferthick-e-w "
                    }
                }).removeClass("ui-corner-all") : $("#btnSwitch").hide();
                setUI(2 ==
                    spanel.stype && 1 == spanel.sorder ? !1 : b, a, c, g);
                $("#btnSpClose").button().removeClass("ui-corner-all").unbind("click").click(function() {
                    $("#divSignPanel").dialog("destroy")
                });
                $("#divTpArea").text(spanel.nm);
                $("#divTpArea").html($("#divTpArea").html() + spanel.carret).focus();
                $("#divTpArea").on("keyup", function(a) {
                    a.preventDefault();
                    13 == a.keyCode ? $("#btnTSign").click() : ((46 == a.keyCode || 8 == a.keyCode) && 0 < spanel.nm.length && (spanel.nm = spanel.nm.substring(0, spanel.nm.length - 1)), $("#divTpArea").text(spanel.nm),
                        $("#divTpArea").html($("#divTpArea").html() + spanel.carret).focus(),
                        function k() {
                            $(".blink_me").fadeOut(500).fadeIn(500, k)
                        }())
                }).keypress(function(a) {
                    spanel.nm = 32 == a.which ? spanel.nm + " " : spanel.nm + String.fromCharCode(a.which);
                    $("#divTpArea").text(spanel.nm);
                    $("#divTpArea").html($("#divTpArea").html() + spanel.carret).focus();
                    (function k() {
                        $(".blink_me").fadeOut(500).fadeIn(500, k)
                    })()
                });
                (function f() {
                    $(".blink_me").fadeOut(500).fadeIn(500, f)
                })()
            },
            position: {
                my: "center top",
                at: "center top+100",
                of: g
            }
        });
        $(".ui-dialog-titlebar").hide();
        $(".ui-dialog-titlebar-close").hide();
        $(".ui-button-text").css({
            "font-weight": "bold"
        });
        $(window).resize(function() {
            $("#divSignPanel").dialog("option", "position", {
                my: "center top",
                at: "top+100",
                of: g
            })
        });
        $("#btnSwitch").unbind("click").click(function() {
            setUI(!$("#signPanel").is(":visible"), a, c)
        });
        $("#btnSigned").unbind("click").click(signed)
    };
    signed = function() {
        if ($("#signPanel").is(":visible")) {
            var a = "";
            for (i = 0; i < spanel.points.length; i++) {
                var b = spanel.points[i];
                a += "x:" + b.x + ",y:" + b.y + ";"
            }
            if (200 > a.replace(/x:-1/g,
                    "").replace(/y:-1/g, "").replace(/x:0/g, "").replace(/y:0/g, "").replace(/x:/g, "").replace(/y:/g, "").length) {
                alert("Please sign document using mouse, then click [Signed].");
                return
            }
        } else {
            if ("" == $.trim(spanel.nm)) {
                alert("Please sign by typing your name, then click [Signed].");
                $("#divTpArea").focus();
                return
            }
            a = $.trim(spanel.nm)
        }
        $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "sign",
                str: a,
                w: spanel.myw,
                h: spanel.myh,
                fid: spanel.param,
                rid: spanel.url,
                t: $("#signPanel").is(":visible") ? 1 : 0,
                tm: (new Date).getTime()
            },
            type: "POST",
            dataType: "json",
            async: !1,
            beforeSend: function() {
                $("#ctrlPanel > .sbutton").button("option", "disabled", !0);
                $("#ctrlPanel > .sbutton-right").button("option", "disabled", !0)
            },
            success: function(a) {
                a.status && "ok" != a.status ? alert("Failed to sign.  Please reload the document and try again.") : ($("#divSignPanel").dialog("destroy"), spanel.callback && spanel.callback(a))
            },
            error: function(a, b, c) {},
            complete: function() {
                $("#ctrlPanel > .sbutton").button("option", "disabled", !1);
                $("#ctrlPanel > .sbutton-right").button("option",
                    "disabled", !1)
            }
        });
        return a
    };
    setUI = function(a, c, g) {
        1 == spanel.stype && (a = !0);
        0 == spanel.stype && (a = !1);
        g = a ? g : 250;
        var e = a ? "Please sign using mouse" : "Please sign by typing your name";
        $("#divSignPanel").dialog("option", "height", g);
        $("#divSignPanel").dialog("option", "title", e);
        a ? ($("#signPanel").show(), $("#ackPanel").hide(), b && !spanel.useRaphael ? ($("#signPadM").attr("width", c - 20).attr("height", g - 110).show(), $("#signPad").css({
            width: "0",
            height: "0"
        }).hide()) : ($("#signPadM").attr("width", "0").attr("height", "0").hide(),
            $("#signPad").css({
                width: "680px",
                height: "350px"
            }).show()), $("#btnResetSignature").show(), 2 == spanel.stype && $("#btnSwitch").button("option", "label", "Sign by Typing"), prepare(), checkDefSign()) : ($("#ackPanel").show(), $("#signPanel").hide(), $("#divTpArea").focus(), $("#btnSignMouse").show(), $("#btnResetSignature").show(), $("#btnDefSign").hide(), 2 == spanel.stype && $("#btnSwitch").button("option", "label", "Sign by Drawing"), $("#txtSigneeName").focus())
    };
    supports_canvas = function() {
        return !!document.createElement("canvas").getContext
    };
    var b = supports_canvas();
    checkDefSign = function() {
        $.ajax({
            url: "controls/FillH.ashx",
            data: {
                action: "defschk",
                rid: fill.request.url,
                tm: (new Date).getTime()
            },
            contentType: "application/json; charset=utf-8",
            async: !0,
            dataType: "json",
            success: function(a) {
                "ok" != a.status ? $("#btnDefSign").hide() : ($("#btnDefSign").show().unbind("click").click(getDefault), "1" == a.misc && getDefault())
            }
        })
    };
    getDefault = function(a) {
        $("#fDef").hide();
        $.ajax({
            url: "Controls/FillH.ashx",
            data: {
                action: "defs",
                cid: spanel.ds,
                rid: fill.request.url,
                tm: (new Date).getTime()
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(b) {
                "ok" == b.status && "" != b.misc && null != b.misc && (spanel.lib.ShowSignature(b.misc), null == a && $("#fDef").show())
            },
            error: function(a, b, e) {}
        })
    };
    prepare = function() {
        $(window).unbind("swipeleft").unbind("swiperight");
        !b || spanel.useRaphael ? ($("#signPadM").hide(), spanel.$spad = $("#signPad"), spanel.mytop = spanel.$spad.offset().top, spanel.myleft = spanel.$spad.offset().left, spanel.myw = spanel.$spad.width(), spanel.myh =
            spanel.$spad.height(), spanel.paper = Raphael(spanel.$spad.get(0), spanel.$spad.width(), spanel.$spad.height()), spanel.$spad.unbind("selectstart").bind("selectstart", function(a) {
                return !1
            }), spanel.lib = new drawingRaphael) : ($("#signPad").hide(), spanel.$spad = $("#signPadM"), spanel.mytop = spanel.$spad.offset().top, spanel.myleft = spanel.$spad.offset().left, spanel.myw = spanel.$spad.width(), spanel.myh = spanel.$spad.height(), spanel.c = document.getElementById("signPadM"), spanel.ctx = spanel.c.getContext("2d"), spanel.lib =
            new drawingCanvas, spanel.c.addEventListener("touchmove", spanel.lib.touchmove, !0), spanel.c.addEventListener("touchstart", spanel.lib.touchstart, !0));
        spanel.lib.OnReset();
        spanel.$spad.unbind("mousdown").unbind("mousemove").mousedown(spanel.lib.OnMouseDown).mousemove(spanel.lib.OnMouseMove);
        $("body").unbind("mouseup").mouseup(spanel.lib.OnMouseUp);
        $("#btnResetSignature").unbind("click").click(spanel.lib.OnReset);
        spanel.prepared = 1
    }
}
var spanel = new Signing;

function drawingCanvas() {
    getCoord = function(b) {
        var a = (b.originalEvent.touches ? b.originalEvent.touches[0].pageX : b.clientX) - spanel.$spad.offset().left;
        b = (b.originalEvent.touches ? b.originalEvent.touches[0].pageY : b.clientY) - spanel.$spad.offset().top;
        return [a, b]
    };
    this.OnReset = function() {
        $("#fDef").hide();
        spanel.points = [];
        spanel.ctx.clearRect(0, 0, spanel.myw, spanel.myh);
        spanel.nm = "";
        $("#divTpArea").text(spanel.nm);
        $("#divTpArea").html($("#divTpArea").html() + spanel.carret).focus()
    };
    this.ShowSignature = function(b) {
        this.OnReset();
        spanel.ctx.beginPath();
        b = b.replace("s->", "");
        b = b.split("|")[0].split(";");
        var a = -2,
            c = -2;
        for (i = 0; i < b.length; i++) {
            var g = b[i].split(",");
            if (2 == g.length) {
                var e = g[0].split(":");
                if (2 == e.length) {
                    var h = parseInt(e[1]);
                    0 >= h || (e = g[1].split(":"), 2 == e.length && (e = parseInt(e[1]), g = {
                        x: h,
                        y: e
                    }, spanel.points.push(g), -2 == a ? (a = h, c = e) : -1 == h ? a = -2 : (spanel.ctx.moveTo(a + 15, c + 15), spanel.ctx.lineTo(h + 15, e + 15), spanel.ctx.stroke(), a = h, c = e)))
                }
            }
        }
    };
    this.OnMouseDown = function(b) {
        b.preventDefault();
        0 < spanel.points.length && spanel.points.push({
            x: -1,
            y: -1
        });
        b = getCoord(b);
        x = b[0];
        y = b[1];
        spanel.ctx.beginPath();
        spanel.ctx.moveTo(b[0], b[1]);
        spanel.draw = !0
    };
    this.OnMouseUp = function(b) {
        spanel.draw = !1;
        spanel.points[spanel.points.length] = {
            x: -1,
            y: -1
        }
    };
    this.OnMouseMove = function(b) {
        b.preventDefault();
        if (spanel.draw) {
            b = getCoord(b);
            spanel.ctx.lineTo(b[0], b[1]);
            spanel.ctx.stroke();
            var a = b[0],
                c = b[1];
            2 >= c && (c = 2);
            c > spanel.myh - 2 && (c = spanel.myh - 2);
            2 >= a && (a = 2);
            a > spanel.myw - 2 && (a = spanel.myw - 2);
            x = a;
            y = c; - 1 > x || -1 > y || 1E4 < x || 1E4 < y ? spanel.draw = !1 : spanel.points.push({
                x: b[0],
                y: b[1]
            })
        }
    };
    this.touchstart = function(b) {
        b.preventDefault();
        0 < spanel.points.length && spanel.points.push({
            x: -1,
            y: -1
        });
        b = getCoord(b);
        spanel.x = b[0];
        spanel.y = b[1];
        spanel.ctx.beginPath();
        spanel.ctx.moveTo(b[0], b[1]);
        spanel.draw = !0
    };
    this.touchmove = function(b) {
        b.preventDefault();
        if (spanel.draw) {
            b = getCoord(b);
            spanel.ctx.lineTo(b[0], b[1]);
            spanel.ctx.stroke();
            var a = b[0],
                c = b[1];
            2 >= c && (c = 2);
            c > spanel.myh - 2 && (c = spanel.myh - 2);
            2 >= a && (a = 2);
            a > spanel.myw - 2 && (a = spanel.myw - 2);
            spanel.x = a;
            spanel.y = c;
            spanel.points.push({
                x: b[0],
                y: b[1]
            })
        }
    }
}

function drawingRaphael() {
    this.OnReset = function() {
        spanel.points = [];
        spanel.paper.clear()
    };
    this.ShowSignature = function(b) {
        this.OnReset();
        b = b.replace("s->", "");
        b = b.split("|")[0].split(";");
        var a = -2,
            c = -2;
        this.OnReset();
        for (i = 0; i < b.length; i++) {
            var g = b[i].split(",");
            if (2 == g.length) {
                var e = g[0].split(":");
                if (2 == e.length) {
                    var h = parseInt(e[1]);
                    e = g[1].split(":");
                    2 == e.length && (e = parseInt(e[1]), g = {
                        x: h,
                        y: e
                    }, spanel.points.push(g), -2 == a ? (a = h, c = e) : -1 == h ? a = -2 : (spanel.paper.path("M" + a + " " + c + "L" + h + " " + e).attr({
                            "stroke-width": "2"
                        }), a =
                        h, c = e))
                }
            }
        }
    };
    this.OnMouseDown = function(b) {
        spanel.draw = !0;
        spanel.x = b.clientX - spanel.myleft;
        spanel.y = b.clientY - (spanel.mytop - $(window).scrollTop())
    };
    this.OnMouseUp = function(b) {
        spanel.draw = !1;
        spanel.points[spanel.points.length] = {
            x: -1,
            y: -1
        }
    };
    this.OnMouseMove = function(b) {
        if (spanel.draw) {
            var a = b.clientX - spanel.myleft,
                c = b.clientY - (spanel.mytop - $(window).scrollTop());
            2 >= c && (c = 2);
            c > spanel.myh - 2 && (c = spanel.myh - 2);
            2 >= a && (a = 2);
            a > spanel.myw - 2 && (a = spanel.myw - 2);
            spanel.paper.path("M" + spanel.x + " " + spanel.y + "L" + a +
                " " + c).attr({
                "stroke-width": "2"
            });
            spanel.x = a;
            spanel.y = c;
            b = {
                x: b.pageX - spanel.myleft,
                y: b.pageY - (spanel.mytop - $(window).scrollTop())
            };
            spanel.points[spanel.points.length] = b
        }
    }
};

function Uploader() {
    var b = "",
        a = "",
        c = "";
    this.init = function(e, h, f, g, l) {
        b = e;
        a = h;
        c = l;
        $("#divUploader").remove();
        $("body").append('<div id="divUploader" style="display:none"><div id="divTarget">Drag and Drop Files Here<br /><br /><br/><div class="inputs btn"  id="btnSelectFile">Select File</div><input type="file" id="fsel" style="opacity:0"/></div><br/><div style="width:100%;height:100px;overflow:auto;"><div id="status1"></div></div></div>');
        $("#divUploader").dialog({
            width: 650,
            height: 450,
            title: "Document upload",
            modal: !0,
            closeOnEscape: !1,
            open: function() {
                f && $("#divUploader").dialog("option", "position", {
                    my: "center top",
                    at: "center top+150",
                    of: f
                });
                $("#status1").html("");
                uploader.refresh(g)
            },
            buttons: {
                Close: function() {
                    $("#divUploader").dialog("destroy")
                }
            },
            close: function() {
                a && a("cancel")
            }
        });
        $(".ui-dialog-titlebar").hide();
        var k = $("#divTarget");
        k.on("dragenter", function(a) {
            a.stopPropagation();
            a.preventDefault();
            $(this).css("border", "2px solid #0B85A1")
        });
        k.on("dragover", function(a) {
            a.stopPropagation();
            a.preventDefault()
        });
        k.on("drop", function(a) {
            $(this).css("border", "2px dotted #0B85A1");
            a.preventDefault();
            handleFileUpload(a.originalEvent.dataTransfer.files, k)
        });
        $(document).on("dragenter", function(a) {
            a.stopPropagation();
            a.preventDefault()
        });
        $(document).on("dragover", function(a) {
            a.stopPropagation();
            a.preventDefault();
            k.css("border", "2px dotted #0B85A1")
        });
        $(document).on("drop", function(a) {
            a.stopPropagation();
            a.preventDefault()
        });
        $("#btnSelectFile").css("cursor", "pointer").click(function() {
            $("#fsel").trigger("click")
        });
        $("#fsel").change(function(a) {
            var b = [];
            b.push(a.target.files[0]);
            handleFileUpload(b, k)
        })
    };
    this.refresh = function(a) {
        $("#status1").html("");
        if (a)
            for (var b = 0; b < a.length; b++) {
                var e = new createStatusbar(a[b]);
                e.filename.html((c ? '<a href="#" id="d_' + a[b].ID + '"><img src="images/selection_delete.png" alt="" style="width:12px"/></a>&nbsp;' : "") + a[b].Name);
                e.size.html("");
                e.setProgress(100);
                e.filename.find("a").click(function() {
                    c($(this).attr("id"))
                })
            }
    };
    sendFileToServer = function(e, g) {
        e = $.ajax({
            xhr: function() {
                var a =
                    $.ajaxSettings.xhr();
                a.upload && a.upload.addEventListener("progress", function(a) {
                    var b = 0,
                        c = a.loaded || a.position,
                        e = a.total;
                    a.lengthComputable && (b = Math.ceil(c / e * 100));
                    g.setProgress(b)
                }, !1);
                return a
            },
            url: b,
            type: "POST",
            contentType: !1,
            processData: !1,
            cache: !1,
            data: e,
            success: function(b) {
                g.setProgress(100);
                var e = b.split(";");
                c && "ok" == e[0] && (g.filename.html('<a href="#" id="d_' + e[1] + '"><img src="images/selection_delete.png" alt="" style="width:12px"/></a>&nbsp;' + e[2]), g.filename.find("a").click(function() {
                    c($(this).attr("id"))
                }));
                "ok" != e[0] && 1 < e.length && Common.obj.showWarningNew(e[1], 250, 300, "Failed");
                a && a(b)
            }
        });
        g.setAbort(e)
    };
    var g = 0;
    createStatusbar = function(a) {
        g++;
        a = "odd";
        0 == g % 2 && (a = "even");
        this.statusbar = $("<div class='statusbar " + a + "'></div>");
        this.filename = $("<div class='filename'></div>").appendTo(this.statusbar);
        this.size = $("<div class='filesize'></div>").appendTo(this.statusbar);
        this.progressBar = $("<div class='progressBar'><div></div></div>").appendTo(this.statusbar);
        this.abort = $("<div class='abort'>Abort</div>").appendTo(this.statusbar);
        0 >= $("#status1 > .statusbar").length ? $("#status1").append(this.statusbar) : this.statusbar.insertBefore($("#status1 > div:first-child"));
        this.setFileNameSize = function(a, b) {
            b /= 1024;
            b = 1024 < parseInt(b) ? (b / 1024).toFixed(2) + " MB" : b.toFixed(2) + " KB";
            this.filename.html(a);
            this.size.html(b)
        };
        this.setProgress = function(a) {
            var b = a * this.progressBar.width() / 100;
            this.progressBar.find("div").animate({
                width: b
            }, 10).html(a + "% ");
            100 <= parseInt(a) && this.abort.hide()
        };
        this.setAbort = function(a) {
            var b = this.statusbar;
            this.abort.click(function() {
                a.abort();
                b.hide()
            })
        }
    };
    handleFileUpload = function(a, b) {
        for (var c = 0; c < a.length; c++) {
            var e = new FormData;
            e.append("file", a[c]);
            "undefined" !== typeof Folders && e.append("folder", Folders.obj.hasOwnProperty("pageID") ? Folders.obj.pageID : "");
            var g = new createStatusbar(b);
            g.setFileNameSize(a[c].name, a[c].size);
            sendFileToServer(e, g)
        }
    }
}
var uploader = new Uploader;
$.fn.extend({
    isYshDisabled: function() {
        return $(this).hasClass("ysh_btn_disabled")
    },
    yshbutton: function(b, a) {
        var c = "undefined" != typeof a ? $.trim(a.toLowerCase()) : "";
        "option" != $.trim(b) ? 0 > $(this).html().indexOf("<i") && ($(this).hasClass("ysh_btn_left") ? ($(this).html('<div class="yshttl">' + $(this).text() + '</div><i class="material-icons md-18">&#x' + b + ";</i>"), $(this).hasClass("ysh_btn_lg") && $(this).find("div:first-child").css({
                "font-size": "12px",
                padding: "2px 0 0 2px"
            })) : $(this).hasClass("ysh_btn_right") ?
            ($(this).html('<div><i class="material-icons md-18">&#x' + b + ';</i></div><div class="yshttl" >' + $(this).text() + "</div>"), $(this).hasClass("ysh_btn_lg") && $(this).find("div:last-child").css({
                "font-size": "12px",
                padding: "2px 0 0 2px"
            })) : $(this).hasClass("ysh_btn_top") ? $(this).html('<span class="yshttl">' + $(this).text() + '</span><br/><i class="material-icons md-18">&#x' + b + ";</i>") : $(this).html('<i class="material-icons md-18">&#x' + b + ';</i><br/><span class="yshttl">' + $(this).text() + "</span>"), $(this).hover(function(a) {
                $(this).isYshDisabled() ?
                    a.stopPropagation() : $(this).css({
                        "background-color": $(this).hasClass("ysh_alert") ? "#ffe200" : $(this).hasClass("ysh_hlgt") ? "#6d9321" : "darkgray",
                        color: $(this).hasClass("ysh_alert") ? "black" : $(this).hasClass("ysh_hlgt") ? "cyan" : "white"
                    })
            }, function(a) {
                $(this).isYshDisabled() ? a.stopPropagation() : $(this).css({
                    "background-color": $(this).hasClass("ysh_alert") ? "orange" : $(this).hasClass("ysh_hlgt") ? "#6d9321" : "lightgray",
                    color: $(this).hasClass("ysh_hlgt") ? "white" : "black"
                })
            }), $(this).hasClass("ysh_btn_left") || $(this).hasClass("ysh_btn_right") ?
            $(this).addClass("ysh_btn_h ui-corner-all") : $(this).addClass("ysh_btn ui-corner-all"), $(this).css({
                "background-color": $(this).hasClass("ysh_alert") ? "orange" : $(this).hasClass("ysh_hlgt") ? "#6d9321" : "lightgray",
                color: $(this).hasClass("ysh_hlgt") ? "white" : "black"
            })) : "disabled" == c ? $(this).addClass("ysh_btn_disabled").css({
            "background-color": "lightgray",
            color: "darkgray"
        }) : "enabled" == c ? $(this).removeClass("ysh_btn_disabled").css({
            "background-color": "lightgray",
            color: "black"
        }) : $(this).find(".yshttl").html(a);
        return $(this)
    }
});